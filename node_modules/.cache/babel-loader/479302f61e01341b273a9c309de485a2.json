{"ast":null,"code":"var _jsxFileName = \"/home/dna-dev/Documents/Training-demo/Netflix-hub/src/components/context/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppSearch = /*#__PURE__*/React.createContext({});\nexport const ContextProvider = props => {\n  _s();\n\n  let initialValue = {\n    searchValue: '',\n    isLoading: false,\n    user: {\n      name: 'JohnMagalso',\n      password: 'admin'\n    }\n  };\n  const [states, setStates] = useState(initialValue);\n  useEffect(() => {\n    setStates(states);\n    console.log(states);\n  }, [states]);\n  return /*#__PURE__*/_jsxDEV(AppSearch.Provider, {\n    value: {\n      states: states,\n      setStates: setStates\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}; // export const Authentication = (props) => {\n//     \n//     return(\n//         <AppLogin.Provider value={{userLogin: userLogin, setUserLogin:setUserLogin}}>\n//             {props.children}\n//         </AppLogin.Provider>\n//     )\n// }\n\n_s(ContextProvider, \"jT96xY9E9zCofOSEkChKUVjCAlE=\");\n\n_c = ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["/home/dna-dev/Documents/Training-demo/Netflix-hub/src/components/context/index.js"],"names":["React","useEffect","useState","AppSearch","createContext","ContextProvider","props","initialValue","searchValue","isLoading","user","name","password","states","setStates","console","log","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;;AAEA,OAAO,MAAMC,SAAS,gBAAGH,KAAK,CAACI,aAAN,CAAoB,EAApB,CAAlB;AACP,OAAO,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AAEtC,MAAIC,YAAY,GAAG;AACfC,IAAAA,WAAW,EAAE,EADE;AAEfC,IAAAA,SAAS,EAAE,KAFI;AAGfC,IAAAA,IAAI,EAAC;AACDC,MAAAA,IAAI,EAAE,aADL;AAEDC,MAAAA,QAAQ,EAAE;AAFT;AAHU,GAAnB;AAQA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAACK,YAAD,CAApC;AACAN,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,SAAS,CAACD,MAAD,CAAT;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACD,GAHM,EAGJ,CAACA,MAAD,CAHI,CAAT;AAIA,sBACI,QAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,KAAK,EAAE;AAACA,MAAAA,MAAM,EAAEA,MAAT;AAAiBC,MAAAA,SAAS,EAAEA;AAA5B,KAA3B;AAAA,cACKR,KAAK,CAACW;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CApBM,C,CAqBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GA5BaZ,e;;KAAAA,e","sourcesContent":["import React, { useEffect, useState} from \"react\";\n\nexport const AppSearch = React.createContext({});\nexport const ContextProvider = (props) => {\n\n    let initialValue = { \n        searchValue: '',\n        isLoading: false,\n        user:{\n            name: 'JohnMagalso',\n            password: 'admin',\n        }\n    }\n    const [states, setStates] = useState(initialValue)\n    useEffect(() => {\n        setStates(states)\n        console.log(states)\n      }, [states])\n    return(\n        <AppSearch.Provider value={{states: states, setStates: setStates}}>\n            {props.children}\n        </AppSearch.Provider>\n    )\n}\n// export const Authentication = (props) => {\n//     \n//     return(\n//         <AppLogin.Provider value={{userLogin: userLogin, setUserLogin:setUserLogin}}>\n//             {props.children}\n//         </AppLogin.Provider>\n//     )\n// }"]},"metadata":{},"sourceType":"module"}