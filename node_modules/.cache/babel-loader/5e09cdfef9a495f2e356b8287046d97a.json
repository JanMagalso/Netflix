{"ast":null,"code":"/**\n * Copyright 2013-2014 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule shouldUpdateReactComponent\n * @typechecks static-only\n */\n\"use strict\";\n/**\n * Given a `prevComponentInstance` and `nextComponent`, determines if\n * `prevComponentInstance` should be updated as opposed to being destroyed or\n * replaced by a new instance. The second argument is a descriptor. Future\n * versions of the reconciler should only compare descriptors to other\n * descriptors.\n *\n * @param {?object} prevComponentInstance\n * @param {?object} nextDescriptor\n * @return {boolean} True if `prevComponentInstance` should be updated.\n * @protected\n */\n\nfunction shouldUpdateReactComponent(prevComponentInstance, nextDescriptor) {\n  // TODO: Remove warning after a release.\n  if (prevComponentInstance && nextDescriptor && prevComponentInstance.constructor === nextDescriptor.constructor && (prevComponentInstance.props && prevComponentInstance.props.key) === (nextDescriptor.props && nextDescriptor.props.key)) {\n    if (prevComponentInstance._owner === nextDescriptor._owner) {\n      return true;\n    } else {\n      if (require('./React').__DEV__ === true) {\n        if (prevComponentInstance.state) {\n          console.warn('A recent change to React has been found to impact your code. ' + 'A mounted component will now be unmounted and replaced by a ' + 'component (of the same class) if their owners are different. ' + 'Previously, ownership was not considered when updating.', prevComponentInstance, nextDescriptor);\n        }\n      }\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = shouldUpdateReactComponent;","map":{"version":3,"sources":["/home/dna-dev/Documents/react-web/node_modules/react-component/lib/shouldUpdateReactComponent.js"],"names":["shouldUpdateReactComponent","prevComponentInstance","nextDescriptor","constructor","props","key","_owner","require","__DEV__","state","console","warn","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,0BAAT,CAAoCC,qBAApC,EAA2DC,cAA3D,EAA2E;AACzE;AACA,MAAID,qBAAqB,IAAIC,cAAzB,IACAD,qBAAqB,CAACE,WAAtB,KAAsCD,cAAc,CAACC,WADrD,IAEE,CAACF,qBAAqB,CAACG,KAAtB,IAA+BH,qBAAqB,CAACG,KAAtB,CAA4BC,GAA5D,OACCH,cAAc,CAACE,KAAf,IAAwBF,cAAc,CAACE,KAAf,CAAqBC,GAD9C,CAFN,EAIO;AACL,QAAIJ,qBAAqB,CAACK,MAAtB,KAAiCJ,cAAc,CAACI,MAApD,EAA4D;AAC1D,aAAO,IAAP;AACD,KAFD,MAEO;AACL,UAAIC,OAAO,CAAC,SAAD,CAAP,CAAmBC,OAAnB,KAA+B,IAAnC,EAAyC;AACvC,YAAIP,qBAAqB,CAACQ,KAA1B,EAAiC;AAC/BC,UAAAA,OAAO,CAACC,IAAR,CACE,kEACA,8DADA,GAEA,+DAFA,GAGA,yDAJF,EAKEV,qBALF,EAMEC,cANF;AAQD;AACF;AACF;AACF;;AACD,SAAO,KAAP;AACD;;AAEDU,MAAM,CAACC,OAAP,GAAiBb,0BAAjB","sourcesContent":["/**\n * Copyright 2013-2014 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule shouldUpdateReactComponent\n * @typechecks static-only\n */\n\n\"use strict\";\n\n/**\n * Given a `prevComponentInstance` and `nextComponent`, determines if\n * `prevComponentInstance` should be updated as opposed to being destroyed or\n * replaced by a new instance. The second argument is a descriptor. Future\n * versions of the reconciler should only compare descriptors to other\n * descriptors.\n *\n * @param {?object} prevComponentInstance\n * @param {?object} nextDescriptor\n * @return {boolean} True if `prevComponentInstance` should be updated.\n * @protected\n */\nfunction shouldUpdateReactComponent(prevComponentInstance, nextDescriptor) {\n  // TODO: Remove warning after a release.\n  if (prevComponentInstance && nextDescriptor &&\n      prevComponentInstance.constructor === nextDescriptor.constructor && (\n        (prevComponentInstance.props && prevComponentInstance.props.key) ===\n        (nextDescriptor.props && nextDescriptor.props.key)\n      )) {\n    if (prevComponentInstance._owner === nextDescriptor._owner) {\n      return true;\n    } else {\n      if (require('./React').__DEV__ === true) {\n        if (prevComponentInstance.state) {\n          console.warn(\n            'A recent change to React has been found to impact your code. ' +\n            'A mounted component will now be unmounted and replaced by a ' +\n            'component (of the same class) if their owners are different. ' +\n            'Previously, ownership was not considered when updating.',\n            prevComponentInstance,\n            nextDescriptor\n          );\n        }\n      }\n    }\n  }\n  return false;\n}\n\nmodule.exports = shouldUpdateReactComponent;\n"]},"metadata":{},"sourceType":"script"}