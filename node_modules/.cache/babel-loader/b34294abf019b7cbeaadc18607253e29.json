{"ast":null,"code":"/**\n * Copyright 2013-2014 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule ReactDOMOption\n */\n\"use strict\";\n\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\n\nvar ReactCompositeComponent = require(\"./ReactCompositeComponent\");\n\nvar ReactDOM = require(\"./ReactDOM\");\n\nvar warning = require(\"./warning\"); // Store a reference to the <option> `ReactDOMComponent`.\n\n\nvar option = ReactDOM.option;\n/**\n * Implements an <option> native component that warns when `selected` is set.\n */\n\nvar ReactDOMOption = ReactCompositeComponent.createClass({\n  displayName: 'ReactDOMOption',\n  mixins: [ReactBrowserComponentMixin],\n  componentWillMount: function () {\n    // TODO (yungsters): Remove support for `selected` in <option>.\n    if (require('./React').__DEV__ === true) {\n      require('./React').__DEV__ === true ? warning(this.props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : null;\n    }\n  },\n  render: function () {\n    return option(this.props, this.props.children);\n  }\n});\nmodule.exports = ReactDOMOption;","map":{"version":3,"sources":["/home/dna-dev/Documents/react-web/node_modules/react-component/lib/ReactDOMOption.js"],"names":["ReactBrowserComponentMixin","require","ReactCompositeComponent","ReactDOM","warning","option","ReactDOMOption","createClass","displayName","mixins","componentWillMount","__DEV__","props","selected","render","children","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,0BAA0B,GAAGC,OAAO,CAAC,8BAAD,CAAxC;;AACA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,2BAAD,CAArC;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,YAAD,CAAtB;;AAEA,IAAIG,OAAO,GAAGH,OAAO,CAAC,WAAD,CAArB,C,CAEA;;;AACA,IAAII,MAAM,GAAGF,QAAQ,CAACE,MAAtB;AAEA;AACA;AACA;;AACA,IAAIC,cAAc,GAAGJ,uBAAuB,CAACK,WAAxB,CAAoC;AACvDC,EAAAA,WAAW,EAAE,gBAD0C;AAGvDC,EAAAA,MAAM,EAAE,CAACT,0BAAD,CAH+C;AAKvDU,EAAAA,kBAAkB,EAAE,YAAW;AAC7B;AACA,QAAIT,OAAO,CAAC,SAAD,CAAP,CAAmBU,OAAnB,KAA+B,IAAnC,EAAyC;AACtCV,MAAAA,OAAO,CAAC,SAAD,CAAP,CAAmBU,OAAnB,KAA+B,IAA/B,GAAsCP,OAAO,CAC5C,KAAKQ,KAAL,CAAWC,QAAX,IAAuB,IADqB,EAE5C,oEACA,iCAH4C,CAA7C,GAIG,IAJJ;AAKD;AACF,GAdsD;AAgBvDC,EAAAA,MAAM,EAAE,YAAW;AACjB,WAAOT,MAAM,CAAC,KAAKO,KAAN,EAAa,KAAKA,KAAL,CAAWG,QAAxB,CAAb;AACD;AAlBsD,CAApC,CAArB;AAsBAC,MAAM,CAACC,OAAP,GAAiBX,cAAjB","sourcesContent":["/**\n * Copyright 2013-2014 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule ReactDOMOption\n */\n\n\"use strict\";\n\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactCompositeComponent = require(\"./ReactCompositeComponent\");\nvar ReactDOM = require(\"./ReactDOM\");\n\nvar warning = require(\"./warning\");\n\n// Store a reference to the <option> `ReactDOMComponent`.\nvar option = ReactDOM.option;\n\n/**\n * Implements an <option> native component that warns when `selected` is set.\n */\nvar ReactDOMOption = ReactCompositeComponent.createClass({\n  displayName: 'ReactDOMOption',\n\n  mixins: [ReactBrowserComponentMixin],\n\n  componentWillMount: function() {\n    // TODO (yungsters): Remove support for `selected` in <option>.\n    if (require('./React').__DEV__ === true) {\n      (require('./React').__DEV__ === true ? warning(\n        this.props.selected == null,\n        'Use the `defaultValue` or `value` props on <select> instead of ' +\n        'setting `selected` on <option>.'\n      ) : null);\n    }\n  },\n\n  render: function() {\n    return option(this.props, this.props.children);\n  }\n\n});\n\nmodule.exports = ReactDOMOption;\n"]},"metadata":{},"sourceType":"script"}