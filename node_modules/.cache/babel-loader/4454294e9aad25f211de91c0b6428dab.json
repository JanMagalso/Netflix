{"ast":null,"code":"var _jsxFileName = \"/home/dna-dev/Documents/react-web/Netflix/netflix-2/src/components/pages/Landing/Landing.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Styled from 'styled-components';\nimport ListMovies from '../../ Movies/ListMovies';\nimport Title from './Title';\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Landing = () => {\n  _s();\n\n  // let movies = ListMovies[0];\n  const [isLoading, setIsloading] = useState(false);\n  useEffect(() => {\n    setIsloading(true);\n    setTimeout(() => {\n      setIsloading(false);\n    }, 1000000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(StyledLoader, {\n      className: \"h-screen w-screen flex justify-center items-center loading\",\n      children: /*#__PURE__*/_jsxDEV(ClipLoader, {\n        loading: true,\n        color: \"#ffffff;\",\n        size: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 8\n    }, this) : /*#__PURE__*/_jsxDEV(StyledBg, {\n      className: \"bg-netflix w-full h-screen overflow-y-auto\",\n      children: /*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 4\n  }, this);\n};\n\n_s(Landing, \"Ytqj0RZkqU4Qav482cuJ4uIbcWQ=\");\n\n_c = Landing;\nexport default Landing;\nconst StyledBg = Styled.div`\n  background: url(${ListMovies[0].bg});\n  background-size: cover;\n\n`;\n_c2 = StyledBg;\nconst StyledLoader = Styled.div`\n  .loading{\n\t  -webkit-animation: scale-out-center 0.5s cubic-bezier(0.550, 0.085, 0.680, 0.530) both;\n    animation: scale-out-center 0.5s cubic-bezier(0.550, 0.085, 0.680, 0.530) both;\n  }\n    @-webkit-keyframes scale-out-center {\n    0% {\n      -webkit-transform: scale(1);\n              transform: scale(1);\n      opacity: 1;\n    }\n    100% {\n      -webkit-transform: scale(0);\n              transform: scale(0);\n      opacity: 1;\n    }\n  }\n  @keyframes scale-out-center {\n    0% {\n      -webkit-transform: scale(1);\n              transform: scale(1);\n      opacity: 1;\n    }\n    100% {\n      -webkit-transform: scale(0);\n              transform: scale(0);\n      opacity: 1;\n    }\n  }\n\n`;\n_c3 = StyledLoader;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Landing\");\n$RefreshReg$(_c2, \"StyledBg\");\n$RefreshReg$(_c3, \"StyledLoader\");","map":{"version":3,"sources":["/home/dna-dev/Documents/react-web/Netflix/netflix-2/src/components/pages/Landing/Landing.js"],"names":["React","useEffect","useState","Styled","ListMovies","Title","ClipLoader","Landing","isLoading","setIsloading","setTimeout","StyledBg","div","bg","StyledLoader"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACEC,IAAAA,UAAU,CAAC,MAAI;AACbD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAFS,EAER,OAFQ,CAAV;AAGH,GALQ,EAKP,EALO,CAAT;AAOA,sBAEC;AAAA,cAEID,SAAS,gBAET,QAAC,YAAD;AAAc,MAAA,SAAS,EAAC,4DAAxB;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,OAAO,MAAnB;AAAoB,QAAA,KAAK,EAAC,UAA1B;AAAqC,QAAA,IAAI,EAAE;AAA3C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFS,gBAMT,QAAC,QAAD;AAAU,MAAA,SAAS,EAAC,4CAApB;AAAA,6BAEG,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAFH;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,UAFD;AAoBD,CA/BD;;GAAMD,O;;KAAAA,O;AAgCN,eAAeA,OAAf;AAEA,MAAMI,QAAQ,GAAGR,MAAM,CAACS,GAAI;AAC5B,oBAAoBR,UAAU,CAAC,CAAD,CAAV,CAAcS,EAAG;AACrC;AACA;AACA,CAJA;MAAMF,Q;AAKN,MAAMG,YAAY,GAAGX,MAAM,CAACS,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA9BA;MAAME,Y","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Styled from 'styled-components'\nimport ListMovies from '../../ Movies/ListMovies'\nimport Title from './Title'\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst Landing = () => {\n  // let movies = ListMovies[0];\n  const [isLoading, setIsloading] = useState(false);\n  \n  useEffect(() => {\n    setIsloading(true)\n      setTimeout(()=>{\n        setIsloading(false);\n      },1000000)\n  },[])\n  \n  return (\n\n   <div>\n     {\n       isLoading \n       ?\n       <StyledLoader className='h-screen w-screen flex justify-center items-center loading'>\n         <ClipLoader loading color=\"#ffffff;\" size={50}/>\n       </StyledLoader>\n       :\n       <StyledBg className='bg-netflix w-full h-screen overflow-y-auto'>\n        \n          <Title/>\n      </StyledBg>\n\n       \n     }\n      \n   </div>\n  )\n}\nexport default Landing\n\nconst StyledBg = Styled.div`\n  background: url(${ListMovies[0].bg});\n  background-size: cover;\n\n`\nconst StyledLoader = Styled.div`\n  .loading{\n\t  -webkit-animation: scale-out-center 0.5s cubic-bezier(0.550, 0.085, 0.680, 0.530) both;\n    animation: scale-out-center 0.5s cubic-bezier(0.550, 0.085, 0.680, 0.530) both;\n  }\n    @-webkit-keyframes scale-out-center {\n    0% {\n      -webkit-transform: scale(1);\n              transform: scale(1);\n      opacity: 1;\n    }\n    100% {\n      -webkit-transform: scale(0);\n              transform: scale(0);\n      opacity: 1;\n    }\n  }\n  @keyframes scale-out-center {\n    0% {\n      -webkit-transform: scale(1);\n              transform: scale(1);\n      opacity: 1;\n    }\n    100% {\n      -webkit-transform: scale(0);\n              transform: scale(0);\n      opacity: 1;\n    }\n  }\n\n`"]},"metadata":{},"sourceType":"module"}