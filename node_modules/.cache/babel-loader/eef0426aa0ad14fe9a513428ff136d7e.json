{"ast":null,"code":"var _jsxFileName = \"/home/dna-dev/Documents/react-web/Netflix/netflix-2/src/components/pages/Landing/Landing.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Styled from 'styled-components';\nimport ListMovies from '../../ Movies/ListMovies';\nimport Title from './Title';\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Landing = () => {\n  _s();\n\n  // let movies = ListMovies[0];\n  const [isLoading, setIsloading] = useState(true);\n  useEffect(() => {\n    if (isLoading) {\n      setTimeout(() => {\n        setIsloading(false);\n      }, 600);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(StyledBg, {\n    className: \"bg-netflix w-full h-screen overflow-y-auto\",\n    children: [/*#__PURE__*/_jsxDEV(ClipLoader, {\n      color: \"#ffffff;\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Landing, \"Cz6FEhyozpeTmRAYJmS51JqtVg0=\");\n\n_c = Landing;\nexport default Landing;\nconst StyledBg = Styled.div`\n  background: url(${ListMovies[0].bg});\n  background-size: cover;\n\n`;\n_c2 = StyledBg;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Landing\");\n$RefreshReg$(_c2, \"StyledBg\");","map":{"version":3,"sources":["/home/dna-dev/Documents/react-web/Netflix/netflix-2/src/components/pages/Landing/Landing.js"],"names":["React","useEffect","useState","Styled","ListMovies","Title","ClipLoader","Landing","isLoading","setIsloading","setTimeout","StyledBg","div","bg"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEd,QAAGO,SAAH,EAAa;AACXE,MAAAA,UAAU,CAAC,MAAI;AACbD,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAFS,EAER,GAFQ,CAAV;AAGD;AACF,GAPQ,CAAT;AASA,sBAEE,QAAC,QAAD;AAAU,IAAA,SAAS,EAAC,4CAApB;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,eAEI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAOD,CApBD;;GAAMF,O;;KAAAA,O;AAqBN,eAAeA,OAAf;AAEA,MAAMI,QAAQ,GAAGR,MAAM,CAACS,GAAI;AAC5B,oBAAoBR,UAAU,CAAC,CAAD,CAAV,CAAcS,EAAG;AACrC;AACA;AACA,CAJA;MAAMF,Q","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Styled from 'styled-components'\nimport ListMovies from '../../ Movies/ListMovies'\nimport Title from './Title'\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst Landing = () => {\n  // let movies = ListMovies[0];\n  const [isLoading, setIsloading] = useState(true);\n  \n  useEffect(() => {\n    \n    if(isLoading){\n      setTimeout(()=>{\n        setIsloading(false);\n      },600)\n    }\n  })\n  \n  return (\n\n    <StyledBg className='bg-netflix w-full h-screen overflow-y-auto'>\n      <ClipLoader color=\"#ffffff;\" />\n        <Title/>\n    </StyledBg>\n  )\n}\nexport default Landing\n\nconst StyledBg = Styled.div`\n  background: url(${ListMovies[0].bg});\n  background-size: cover;\n\n`"]},"metadata":{},"sourceType":"module"}