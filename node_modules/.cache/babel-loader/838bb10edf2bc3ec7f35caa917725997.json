{"ast":null,"code":"/**\n * Copyright 2013-2014 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule DOMPropertyOperations\n * @typechecks static-only\n */\n\"use strict\";\n\nvar DOMProperty = require(\"./DOMProperty\");\n\nvar escapeTextForBrowser = require(\"./escapeTextForBrowser\");\n\nvar memoizeStringOnly = require(\"./memoizeStringOnly\");\n\nvar warning = require(\"./warning\");\n\nfunction shouldIgnoreValue(name, value) {\n  return value == null || DOMProperty.hasBooleanValue[name] && !value || DOMProperty.hasPositiveNumericValue[name] && (isNaN(value) || value < 1);\n}\n\nvar processAttributeNameAndPrefix = memoizeStringOnly(function (name) {\n  return escapeTextForBrowser(name) + '=\"';\n});\n\nif (require('./React').__DEV__ === true) {\n  var reactProps = {\n    children: true,\n    dangerouslySetInnerHTML: true,\n    key: true,\n    ref: true\n  };\n  var warnedProperties = {};\n\n  var warnUnknownProperty = function (name) {\n    if (reactProps[name] || warnedProperties[name]) {\n      return;\n    }\n\n    warnedProperties[name] = true;\n    var lowerCasedName = name.toLowerCase(); // data-* attributes should be lowercase; suggest the lowercase version\n\n    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName[lowerCasedName]; // For now, only warn when we have a suggested correction. This prevents\n    // logging too much when using transferPropsTo.\n\n    require('./React').__DEV__ === true ? warning(standardName == null, 'Unknown DOM property ' + name + '. Did you mean ' + standardName + '?') : null;\n  };\n}\n/**\n * Operations for dealing with DOM properties.\n */\n\n\nvar DOMPropertyOperations = {\n  /**\n   * Creates markup for the ID property.\n   *\n   * @param {string} id Unescaped ID.\n   * @return {string} Markup string.\n   */\n  createMarkupForID: function (id) {\n    return processAttributeNameAndPrefix(DOMProperty.ID_ATTRIBUTE_NAME) + escapeTextForBrowser(id) + '\"';\n  },\n\n  /**\n   * Creates markup for a property.\n   *\n   * @param {string} name\n   * @param {*} value\n   * @return {?string} Markup string, or null if the property was invalid.\n   */\n  createMarkupForProperty: function (name, value) {\n    if (DOMProperty.isStandardName[name]) {\n      if (shouldIgnoreValue(name, value)) {\n        return '';\n      }\n\n      var attributeName = DOMProperty.getAttributeName[name];\n\n      if (DOMProperty.hasBooleanValue[name]) {\n        return escapeTextForBrowser(attributeName);\n      }\n\n      return processAttributeNameAndPrefix(attributeName) + escapeTextForBrowser(value) + '\"';\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      if (value == null) {\n        return '';\n      }\n\n      return processAttributeNameAndPrefix(name) + escapeTextForBrowser(value) + '\"';\n    } else if (require('./React').__DEV__ === true) {\n      warnUnknownProperty(name);\n    }\n\n    return null;\n  },\n\n  /**\n   * Sets the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   * @param {*} value\n   */\n  setValueForProperty: function (node, name, value) {\n    if (DOMProperty.isStandardName[name]) {\n      var mutationMethod = DOMProperty.getMutationMethod[name];\n\n      if (mutationMethod) {\n        mutationMethod(node, value);\n      } else if (shouldIgnoreValue(name, value)) {\n        this.deleteValueForProperty(node, name);\n      } else if (DOMProperty.mustUseAttribute[name]) {\n        node.setAttribute(DOMProperty.getAttributeName[name], '' + value);\n      } else {\n        var propName = DOMProperty.getPropertyName[name];\n\n        if (!DOMProperty.hasSideEffects[name] || node[propName] !== value) {\n          node[propName] = value;\n        }\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      if (value == null) {\n        node.removeAttribute(DOMProperty.getAttributeName[name]);\n      } else {\n        node.setAttribute(name, '' + value);\n      }\n    } else if (require('./React').__DEV__ === true) {\n      warnUnknownProperty(name);\n    }\n  },\n\n  /**\n   * Deletes the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   */\n  deleteValueForProperty: function (node, name) {\n    if (DOMProperty.isStandardName[name]) {\n      var mutationMethod = DOMProperty.getMutationMethod[name];\n\n      if (mutationMethod) {\n        mutationMethod(node, undefined);\n      } else if (DOMProperty.mustUseAttribute[name]) {\n        node.removeAttribute(DOMProperty.getAttributeName[name]);\n      } else {\n        var propName = DOMProperty.getPropertyName[name];\n        var defaultValue = DOMProperty.getDefaultValueForProperty(node.nodeName, propName);\n\n        if (!DOMProperty.hasSideEffects[name] || node[propName] !== defaultValue) {\n          node[propName] = defaultValue;\n        }\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      node.removeAttribute(name);\n    } else if (require('./React').__DEV__ === true) {\n      warnUnknownProperty(name);\n    }\n  }\n};\nmodule.exports = DOMPropertyOperations;","map":{"version":3,"sources":["/home/dna-dev/Documents/react-web/node_modules/react-component/lib/DOMPropertyOperations.js"],"names":["DOMProperty","require","escapeTextForBrowser","memoizeStringOnly","warning","shouldIgnoreValue","name","value","hasBooleanValue","hasPositiveNumericValue","isNaN","processAttributeNameAndPrefix","__DEV__","reactProps","children","dangerouslySetInnerHTML","key","ref","warnedProperties","warnUnknownProperty","lowerCasedName","toLowerCase","standardName","isCustomAttribute","getPossibleStandardName","DOMPropertyOperations","createMarkupForID","id","ID_ATTRIBUTE_NAME","createMarkupForProperty","isStandardName","attributeName","getAttributeName","setValueForProperty","node","mutationMethod","getMutationMethod","deleteValueForProperty","mustUseAttribute","setAttribute","propName","getPropertyName","hasSideEffects","removeAttribute","undefined","defaultValue","getDefaultValueForProperty","nodeName","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2013-2014 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule DOMPropertyOperations\n * @typechecks static-only\n */\n\n\"use strict\";\n\nvar DOMProperty = require(\"./DOMProperty\");\n\nvar escapeTextForBrowser = require(\"./escapeTextForBrowser\");\nvar memoizeStringOnly = require(\"./memoizeStringOnly\");\nvar warning = require(\"./warning\");\n\nfunction shouldIgnoreValue(name, value) {\n  return value == null ||\n    DOMProperty.hasBooleanValue[name] && !value ||\n    DOMProperty.hasPositiveNumericValue[name] && (isNaN(value) || value < 1);\n}\n\nvar processAttributeNameAndPrefix = memoizeStringOnly(function(name) {\n  return escapeTextForBrowser(name) + '=\"';\n});\n\nif (require('./React').__DEV__ === true) {\n  var reactProps = {\n    children: true,\n    dangerouslySetInnerHTML: true,\n    key: true,\n    ref: true\n  };\n  var warnedProperties = {};\n\n  var warnUnknownProperty = function(name) {\n    if (reactProps[name] || warnedProperties[name]) {\n      return;\n    }\n\n    warnedProperties[name] = true;\n    var lowerCasedName = name.toLowerCase();\n\n    // data-* attributes should be lowercase; suggest the lowercase version\n    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ?\n      lowerCasedName : DOMProperty.getPossibleStandardName[lowerCasedName];\n\n    // For now, only warn when we have a suggested correction. This prevents\n    // logging too much when using transferPropsTo.\n    (require('./React').__DEV__ === true ? warning(\n      standardName == null,\n      'Unknown DOM property ' + name + '. Did you mean ' + standardName + '?'\n    ) : null);\n\n  };\n}\n\n/**\n * Operations for dealing with DOM properties.\n */\nvar DOMPropertyOperations = {\n\n  /**\n   * Creates markup for the ID property.\n   *\n   * @param {string} id Unescaped ID.\n   * @return {string} Markup string.\n   */\n  createMarkupForID: function(id) {\n    return processAttributeNameAndPrefix(DOMProperty.ID_ATTRIBUTE_NAME) +\n      escapeTextForBrowser(id) + '\"';\n  },\n\n  /**\n   * Creates markup for a property.\n   *\n   * @param {string} name\n   * @param {*} value\n   * @return {?string} Markup string, or null if the property was invalid.\n   */\n  createMarkupForProperty: function(name, value) {\n    if (DOMProperty.isStandardName[name]) {\n      if (shouldIgnoreValue(name, value)) {\n        return '';\n      }\n      var attributeName = DOMProperty.getAttributeName[name];\n      if (DOMProperty.hasBooleanValue[name]) {\n        return escapeTextForBrowser(attributeName);\n      }\n      return processAttributeNameAndPrefix(attributeName) +\n        escapeTextForBrowser(value) + '\"';\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      if (value == null) {\n        return '';\n      }\n      return processAttributeNameAndPrefix(name) +\n        escapeTextForBrowser(value) + '\"';\n    } else if (require('./React').__DEV__ === true) {\n      warnUnknownProperty(name);\n    }\n    return null;\n  },\n\n  /**\n   * Sets the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   * @param {*} value\n   */\n  setValueForProperty: function(node, name, value) {\n    if (DOMProperty.isStandardName[name]) {\n      var mutationMethod = DOMProperty.getMutationMethod[name];\n      if (mutationMethod) {\n        mutationMethod(node, value);\n      } else if (shouldIgnoreValue(name, value)) {\n        this.deleteValueForProperty(node, name);\n      } else if (DOMProperty.mustUseAttribute[name]) {\n        node.setAttribute(DOMProperty.getAttributeName[name], '' + value);\n      } else {\n        var propName = DOMProperty.getPropertyName[name];\n        if (!DOMProperty.hasSideEffects[name] || node[propName] !== value) {\n          node[propName] = value;\n        }\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      if (value == null) {\n        node.removeAttribute(DOMProperty.getAttributeName[name]);\n      } else {\n        node.setAttribute(name, '' + value);\n      }\n    } else if (require('./React').__DEV__ === true) {\n      warnUnknownProperty(name);\n    }\n  },\n\n  /**\n   * Deletes the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   */\n  deleteValueForProperty: function(node, name) {\n    if (DOMProperty.isStandardName[name]) {\n      var mutationMethod = DOMProperty.getMutationMethod[name];\n      if (mutationMethod) {\n        mutationMethod(node, undefined);\n      } else if (DOMProperty.mustUseAttribute[name]) {\n        node.removeAttribute(DOMProperty.getAttributeName[name]);\n      } else {\n        var propName = DOMProperty.getPropertyName[name];\n        var defaultValue = DOMProperty.getDefaultValueForProperty(\n          node.nodeName,\n          propName\n        );\n        if (!DOMProperty.hasSideEffects[name] ||\n            node[propName] !== defaultValue) {\n          node[propName] = defaultValue;\n        }\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      node.removeAttribute(name);\n    } else if (require('./React').__DEV__ === true) {\n      warnUnknownProperty(name);\n    }\n  }\n\n};\n\nmodule.exports = DOMPropertyOperations;\n"]},"metadata":{},"sourceType":"script"}