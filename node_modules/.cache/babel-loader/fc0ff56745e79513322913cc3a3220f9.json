{"ast":null,"code":"var _jsxFileName = \"/home/dna-dev/Documents/react-web/Netflix/netflix-2/src/components/pages/Shows/Shows.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Latest } from './../../Movies';\nimport Styled from 'styled-components';\nimport { AppSearch } from './../../context';\nimport Slider from 'react-slick';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Movies() {\n  _s();\n\n  const context = useContext(AppSearch);\n  const {\n    searchValue\n  } = context.states;\n  const [movies, setMovies] = useState(Latest);\n  const settings = {\n    dots: false,\n    infinite: true,\n    slidesToShow: 5,\n    slidesToScroll: 1,\n    autoplay: true,\n    speed: 500,\n    autoplaySpeed: 1500,\n    cssEase: \"linear\"\n  };\n  useEffect(() => {\n    const newList = [...Latest].filter(data => data.genre.toLowerCase().match('series') !== null);\n    setMovies(newList);\n  }, [searchValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"py-20 px-12 bg-black h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-5 text-white text-2xl mr-14\",\n      children: [\"All time Favorite\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 77\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex mx-auto scrollbar overflow-x-scroll h-52\",\n      children: /*#__PURE__*/_jsxDEV(Slider, { ...settings,\n        children: movies.map((dataList, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mx-1 py-5\",\n            children: [/*#__PURE__*/_jsxDEV(StyledImg, {\n              src: dataList.img,\n              className: \"\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-white z-50 relative top-0 mt-5 hidden\",\n              children: dataList.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Movies, \"l9TGVH3RFXPq597F6gM62rlDd84=\");\n\n_c = Movies;\nconst StyledImg = Styled.img`\n    margin-top: 20px;\n    max-width: unset;\n    width: 200px;\n    height: 120px;\n    :hover{\n        transition: 0.5s;\n        transform: scale(1.5);\n        object-fit: contain;\n    }\n    @media (max-width: 768px){\n        :hover{\n            // transform: none;\n            transition: 0.5s;\n            overflow: scroll;\n            object-fit: contain;\n            transform: scale(1.2)\n        }\n    }\n`;\n_c2 = StyledImg;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Movies\");\n$RefreshReg$(_c2, \"StyledImg\");","map":{"version":3,"sources":["/home/dna-dev/Documents/react-web/Netflix/netflix-2/src/components/pages/Shows/Shows.jsx"],"names":["React","useContext","useEffect","useState","Latest","Styled","AppSearch","Slider","Movies","context","searchValue","states","movies","setMovies","settings","dots","infinite","slidesToShow","slidesToScroll","autoplay","speed","autoplaySpeed","cssEase","newList","filter","data","genre","toLowerCase","match","map","dataList","i","img","title","StyledImg"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAAQC,MAAR,QAAqB,gBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,eAAe,SAASC,MAAT,GAAiB;AAAA;;AAC5B,QAAMC,OAAO,GAAGR,UAAU,CAACK,SAAD,CAA1B;AACA,QAAM;AAACI,IAAAA;AAAD,MAAgBD,OAAO,CAACE,MAA9B;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAACC,MAAD,CAApC;AACA,QAAMU,QAAQ,GAAG;AACbC,IAAAA,IAAI,EAAE,KADO;AAEbC,IAAAA,QAAQ,EAAE,IAFG;AAGbC,IAAAA,YAAY,EAAE,CAHD;AAIbC,IAAAA,cAAc,EAAE,CAJH;AAKbC,IAAAA,QAAQ,EAAE,IALG;AAMbC,IAAAA,KAAK,EAAE,GANM;AAObC,IAAAA,aAAa,EAAE,IAPF;AAQbC,IAAAA,OAAO,EAAE;AARI,GAAjB;AAUApB,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMqB,OAAO,GAAG,CAAC,GAAGnB,MAAJ,EAAYoB,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACC,KAAL,CAAWC,WAAX,GAAyBC,KAAzB,CAA+B,QAA/B,MAA4C,IAAvE,CAAhB;AACAf,IAAAA,SAAS,CAACU,OAAD,CAAT;AACH,GAHQ,EAGP,CAACb,WAAD,CAHO,CAAT;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,gCAAd;AAAA,mDAAgE;AAAA;AAAA;AAAA;AAAA,cAAhE;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGK;AAAK,MAAA,SAAS,EAAC,+CAAf;AAAA,6BACD,QAAC,MAAD,OAAYI,QAAZ;AAAA,kBAEIF,MAAM,CAACiB,GAAP,CAAW,CAACC,QAAD,EAAUC,CAAV,KAAgB;AAC3B,8BACI;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,oCACI,QAAC,SAAD;AACQ,cAAA,GAAG,EAAED,QAAQ,CAACE,GADtB;AAEQ,cAAA,SAAS,EAAC,EAFlB;AAGQ,cAAA,GAAG,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAMQ;AAAI,cAAA,SAAS,EAAC,4CAAd;AAAA,wBAA4DF,QAAQ,CAACG;AAArE;AAAA;AAAA;AAAA;AAAA,oBANR;AAAA,aAA4CF,CAA5C;AAAA;AAAA;AAAA;AAAA,kBADJ;AAUH,SAXG;AAFJ;AAAA;AAAA;AAAA;AAAA;AADC;AAAA;AAAA;AAAA;AAAA,YAHL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH;;GA1CuBvB,M;;KAAAA,M;AA4CxB,MAAM0B,SAAS,GAAG7B,MAAM,CAAC2B,GAAK;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBA;MAAME,S","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport {Latest} from './../../Movies'\nimport Styled from 'styled-components'\nimport { AppSearch } from './../../context';\nimport Slider from 'react-slick'\n\nexport default function Movies(){\n    const context = useContext(AppSearch)\n    const {searchValue} = context.states;\n    const [movies, setMovies] = useState(Latest);\n    const settings = {\n        dots: false,\n        infinite: true,\n        slidesToShow: 5,\n        slidesToScroll: 1,\n        autoplay: true,\n        speed: 500,\n        autoplaySpeed: 1500,\n        cssEase: \"linear\",\n    };\n    useEffect(()=>{\n        const newList = [...Latest].filter(data => data.genre.toLowerCase().match('series')!== null)\n        setMovies(newList);\n    },[searchValue])\n    return(\n        <div className='py-20 px-12 bg-black h-screen'>\n            <h2 className='mb-5 text-white text-2xl mr-14'>All time Favorite<br/>\n            </h2>\n             <div className='flex mx-auto scrollbar overflow-x-scroll h-52'>\n            <Slider {...settings}>\n            {\n                movies.map((dataList,i) => {\n                return(\n                    <div className='text-center mx-1 py-5' key={i}>\n                        <StyledImg \n                                src={dataList.img}\n                                className=''\n                                alt=''\n                            />\n                            <h2 className='text-white z-50 relative top-0 mt-5 hidden'>{dataList.title}</h2>\n                    </div>\n                )\n            })\n            }\n            </Slider>\n            </div>\n        </div>\n    )\n}\n\nconst StyledImg = Styled.img `\n    margin-top: 20px;\n    max-width: unset;\n    width: 200px;\n    height: 120px;\n    :hover{\n        transition: 0.5s;\n        transform: scale(1.5);\n        object-fit: contain;\n    }\n    @media (max-width: 768px){\n        :hover{\n            // transform: none;\n            transition: 0.5s;\n            overflow: scroll;\n            object-fit: contain;\n            transform: scale(1.2)\n        }\n    }\n`\n\n"]},"metadata":{},"sourceType":"module"}