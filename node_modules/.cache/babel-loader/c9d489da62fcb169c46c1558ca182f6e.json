{"ast":null,"code":"/**\n * Copyright 2013-2014 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule ReactEventEmitter\n * @typechecks static-only\n */\n\"use strict\";\n\nvar EventConstants = require(\"./EventConstants\");\n\nvar EventListener = require(\"./EventListener\");\n\nvar EventPluginHub = require(\"./EventPluginHub\");\n\nvar EventPluginRegistry = require(\"./EventPluginRegistry\");\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar ReactEventEmitterMixin = require(\"./ReactEventEmitterMixin\");\n\nvar ViewportMetrics = require(\"./ViewportMetrics\");\n\nvar invariant = require(\"./invariant\");\n\nvar isEventSupported = require(\"./isEventSupported\");\n\nvar merge = require(\"./merge\");\n/**\n * Summary of `ReactEventEmitter` event handling:\n *\n *  - Top-level delegation is used to trap native browser events. We normalize\n *    and de-duplicate events to account for browser quirks.\n *\n *  - Forward these native events (with the associated top-level type used to\n *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want\n *    to extract any synthetic events.\n *\n *  - The `EventPluginHub` will then process each event by annotating them with\n *    \"dispatches\", a sequence of listeners and IDs that care about that event.\n *\n *  - The `EventPluginHub` then dispatches the events.\n *\n * Overview of React and the event system:\n *\n *                   .\n * +------------+    .\n * |    DOM     |    .\n * +------------+    .                         +-----------+\n *       +           .               +--------+|SimpleEvent|\n *       |           .               |         |Plugin     |\n * +-----|------+    .               v         +-----------+\n * |     |      |    .    +--------------+                    +------------+\n * |     +-----------.--->|EventPluginHub|                    |    Event   |\n * |            |    .    |              |     +-----------+  | Propagators|\n * | ReactEvent |    .    |              |     |TapEvent   |  |------------|\n * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|\n * |            |    .    |              |     +-----------+  |  utilities |\n * |     +-----------.--->|              |                    +------------+\n * |     |      |    .    +--------------+\n * +-----|------+    .                ^        +-----------+\n *       |           .                |        |Enter/Leave|\n *       +           .                +-------+|Plugin     |\n * +-------------+   .                         +-----------+\n * | application |   .\n * |-------------|   .\n * |             |   .\n * |             |   .\n * +-------------+   .\n *                   .\n *    React Core     .  General Purpose Event Plugin System\n */\n\n\nvar alreadyListeningTo = {};\nvar isMonitoringScrollValue = false;\nvar reactTopListenersCounter = 0; // For events like 'submit' which don't consistently bubble (which we trap at a\n// lower node than `document`), binding at `document` would cause duplicate\n// events so we don't include them here\n\nvar topEventMapping = {\n  topBlur: 'blur',\n  topChange: 'change',\n  topClick: 'click',\n  topCompositionEnd: 'compositionend',\n  topCompositionStart: 'compositionstart',\n  topCompositionUpdate: 'compositionupdate',\n  topContextMenu: 'contextmenu',\n  topCopy: 'copy',\n  topCut: 'cut',\n  topDoubleClick: 'dblclick',\n  topDrag: 'drag',\n  topDragEnd: 'dragend',\n  topDragEnter: 'dragenter',\n  topDragExit: 'dragexit',\n  topDragLeave: 'dragleave',\n  topDragOver: 'dragover',\n  topDragStart: 'dragstart',\n  topDrop: 'drop',\n  topFocus: 'focus',\n  topInput: 'input',\n  topKeyDown: 'keydown',\n  topKeyPress: 'keypress',\n  topKeyUp: 'keyup',\n  topMouseDown: 'mousedown',\n  topMouseMove: 'mousemove',\n  topMouseOut: 'mouseout',\n  topMouseOver: 'mouseover',\n  topMouseUp: 'mouseup',\n  topPaste: 'paste',\n  topScroll: 'scroll',\n  topSelectionChange: 'selectionchange',\n  topTouchCancel: 'touchcancel',\n  topTouchEnd: 'touchend',\n  topTouchMove: 'touchmove',\n  topTouchStart: 'touchstart',\n  topWheel: 'wheel'\n};\n/**\n * To ensure no conflicts with other potential React instances on the page\n */\n\nvar topListenersIDKey = \"_reactListenersID\" + String(Math.random()).slice(2);\n\nfunction getListeningForDocument(mountAt) {\n  if (mountAt[topListenersIDKey] == null) {\n    mountAt[topListenersIDKey] = reactTopListenersCounter++;\n    alreadyListeningTo[mountAt[topListenersIDKey]] = {};\n  }\n\n  return alreadyListeningTo[mountAt[topListenersIDKey]];\n}\n/**\n * Traps top-level events by using event bubbling.\n *\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {string} handlerBaseName Event name (e.g. \"click\").\n * @param {DOMEventTarget} element Element on which to attach listener.\n * @internal\n */\n\n\nfunction trapBubbledEvent(topLevelType, handlerBaseName, element) {\n  EventListener.listen(element, handlerBaseName, ReactEventEmitter.TopLevelCallbackCreator.createTopLevelCallback(topLevelType));\n}\n/**\n * Traps a top-level event by using event capturing.\n *\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {string} handlerBaseName Event name (e.g. \"click\").\n * @param {DOMEventTarget} element Element on which to attach listener.\n * @internal\n */\n\n\nfunction trapCapturedEvent(topLevelType, handlerBaseName, element) {\n  EventListener.capture(element, handlerBaseName, ReactEventEmitter.TopLevelCallbackCreator.createTopLevelCallback(topLevelType));\n}\n/**\n * `ReactEventEmitter` is used to attach top-level event listeners. For example:\n *\n *   ReactEventEmitter.putListener('myID', 'onClick', myFunction);\n *\n * This would allocate a \"registration\" of `('onClick', myFunction)` on 'myID'.\n *\n * @internal\n */\n\n\nvar ReactEventEmitter = merge(ReactEventEmitterMixin, {\n  /**\n   * React references `ReactEventTopLevelCallback` using this property in order\n   * to allow dependency injection.\n   */\n  TopLevelCallbackCreator: null,\n  injection: {\n    /**\n     * @param {function} TopLevelCallbackCreator\n     */\n    injectTopLevelCallbackCreator: function (TopLevelCallbackCreator) {\n      ReactEventEmitter.TopLevelCallbackCreator = TopLevelCallbackCreator;\n    }\n  },\n\n  /**\n   * Sets whether or not any created callbacks should be enabled.\n   *\n   * @param {boolean} enabled True if callbacks should be enabled.\n   */\n  setEnabled: function (enabled) {\n    require('./React').__DEV__ === true ? invariant(ExecutionEnvironment.canUseDOM, 'setEnabled(...): Cannot toggle event listening in a Worker thread. ' + 'This is likely a bug in the framework. Please report immediately.') : invariant(ExecutionEnvironment.canUseDOM);\n\n    if (ReactEventEmitter.TopLevelCallbackCreator) {\n      ReactEventEmitter.TopLevelCallbackCreator.setEnabled(enabled);\n    }\n  },\n\n  /**\n   * @return {boolean} True if callbacks are enabled.\n   */\n  isEnabled: function () {\n    return !!(ReactEventEmitter.TopLevelCallbackCreator && ReactEventEmitter.TopLevelCallbackCreator.isEnabled());\n  },\n\n  /**\n   * We listen for bubbled touch events on the document object.\n   *\n   * Firefox v8.01 (and possibly others) exhibited strange behavior when\n   * mounting `onmousemove` events at some node that was not the document\n   * element. The symptoms were that if your mouse is not moving over something\n   * contained within that mount point (for example on the background) the\n   * top-level listeners for `onmousemove` won't be called. However, if you\n   * register the `mousemove` on the document object, then it will of course\n   * catch all `mousemove`s. This along with iOS quirks, justifies restricting\n   * top-level listeners to the document object only, at least for these\n   * movement types of events and possibly all events.\n   *\n   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n   *\n   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but\n   * they bubble to document.\n   *\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @param {DOMDocument} contentDocument Document which owns the container\n   */\n  listenTo: function (registrationName, contentDocument) {\n    var mountAt = contentDocument;\n    var isListening = getListeningForDocument(mountAt);\n    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];\n    var topLevelTypes = EventConstants.topLevelTypes;\n\n    for (var i = 0, l = dependencies.length; i < l; i++) {\n      var dependency = dependencies[i];\n\n      if (!isListening[dependency]) {\n        var topLevelType = topLevelTypes[dependency];\n\n        if (topLevelType === topLevelTypes.topWheel) {\n          if (isEventSupported('wheel')) {\n            trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);\n          } else if (isEventSupported('mousewheel')) {\n            trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);\n          } else {\n            // Firefox needs to capture a different mouse scroll event.\n            // @see http://www.quirksmode.org/dom/events/tests/scroll.html\n            trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);\n          }\n        } else if (topLevelType === topLevelTypes.topScroll) {\n          if (isEventSupported('scroll', true)) {\n            trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);\n          } else {\n            trapBubbledEvent(topLevelTypes.topScroll, 'scroll', window);\n          }\n        } else if (topLevelType === topLevelTypes.topFocus || topLevelType === topLevelTypes.topBlur) {\n          if (isEventSupported('focus', true)) {\n            trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);\n            trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);\n          } else if (isEventSupported('focusin')) {\n            // IE has `focusin` and `focusout` events which bubble.\n            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html\n            trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);\n            trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);\n          } // to make sure blur and focus event listeners are only attached once\n\n\n          isListening[topLevelTypes.topBlur] = true;\n          isListening[topLevelTypes.topFocus] = true;\n        } else if (topEventMapping[dependency]) {\n          trapBubbledEvent(topLevelType, topEventMapping[dependency], mountAt);\n        }\n\n        isListening[dependency] = true;\n      }\n    }\n  },\n\n  /**\n   * Listens to window scroll and resize events. We cache scroll values so that\n   * application code can access them without triggering reflows.\n   *\n   * NOTE: Scroll events do not bubble.\n   *\n   * @see http://www.quirksmode.org/dom/events/scroll.html\n   */\n  ensureScrollValueMonitoring: function () {\n    if (!isMonitoringScrollValue) {\n      var refresh = ViewportMetrics.refreshScrollValues;\n      EventListener.listen(window, 'scroll', refresh);\n      EventListener.listen(window, 'resize', refresh);\n      isMonitoringScrollValue = true;\n    }\n  },\n  eventNameDispatchConfigs: EventPluginHub.eventNameDispatchConfigs,\n  registrationNameModules: EventPluginHub.registrationNameModules,\n  putListener: EventPluginHub.putListener,\n  getListener: EventPluginHub.getListener,\n  deleteListener: EventPluginHub.deleteListener,\n  deleteAllListeners: EventPluginHub.deleteAllListeners,\n  trapBubbledEvent: trapBubbledEvent,\n  trapCapturedEvent: trapCapturedEvent\n});\nmodule.exports = ReactEventEmitter;","map":{"version":3,"sources":["/home/dna-dev/Documents/react-web/node_modules/react-component/lib/ReactEventEmitter.js"],"names":["EventConstants","require","EventListener","EventPluginHub","EventPluginRegistry","ExecutionEnvironment","ReactEventEmitterMixin","ViewportMetrics","invariant","isEventSupported","merge","alreadyListeningTo","isMonitoringScrollValue","reactTopListenersCounter","topEventMapping","topBlur","topChange","topClick","topCompositionEnd","topCompositionStart","topCompositionUpdate","topContextMenu","topCopy","topCut","topDoubleClick","topDrag","topDragEnd","topDragEnter","topDragExit","topDragLeave","topDragOver","topDragStart","topDrop","topFocus","topInput","topKeyDown","topKeyPress","topKeyUp","topMouseDown","topMouseMove","topMouseOut","topMouseOver","topMouseUp","topPaste","topScroll","topSelectionChange","topTouchCancel","topTouchEnd","topTouchMove","topTouchStart","topWheel","topListenersIDKey","String","Math","random","slice","getListeningForDocument","mountAt","trapBubbledEvent","topLevelType","handlerBaseName","element","listen","ReactEventEmitter","TopLevelCallbackCreator","createTopLevelCallback","trapCapturedEvent","capture","injection","injectTopLevelCallbackCreator","setEnabled","enabled","__DEV__","canUseDOM","isEnabled","listenTo","registrationName","contentDocument","isListening","dependencies","registrationNameDependencies","topLevelTypes","i","l","length","dependency","window","ensureScrollValueMonitoring","refresh","refreshScrollValues","eventNameDispatchConfigs","registrationNameModules","putListener","getListener","deleteListener","deleteAllListeners","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2013-2014 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule ReactEventEmitter\n * @typechecks static-only\n */\n\n\"use strict\";\n\nvar EventConstants = require(\"./EventConstants\");\nvar EventListener = require(\"./EventListener\");\nvar EventPluginHub = require(\"./EventPluginHub\");\nvar EventPluginRegistry = require(\"./EventPluginRegistry\");\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\nvar ReactEventEmitterMixin = require(\"./ReactEventEmitterMixin\");\nvar ViewportMetrics = require(\"./ViewportMetrics\");\n\nvar invariant = require(\"./invariant\");\nvar isEventSupported = require(\"./isEventSupported\");\nvar merge = require(\"./merge\");\n\n/**\n * Summary of `ReactEventEmitter` event handling:\n *\n *  - Top-level delegation is used to trap native browser events. We normalize\n *    and de-duplicate events to account for browser quirks.\n *\n *  - Forward these native events (with the associated top-level type used to\n *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want\n *    to extract any synthetic events.\n *\n *  - The `EventPluginHub` will then process each event by annotating them with\n *    \"dispatches\", a sequence of listeners and IDs that care about that event.\n *\n *  - The `EventPluginHub` then dispatches the events.\n *\n * Overview of React and the event system:\n *\n *                   .\n * +------------+    .\n * |    DOM     |    .\n * +------------+    .                         +-----------+\n *       +           .               +--------+|SimpleEvent|\n *       |           .               |         |Plugin     |\n * +-----|------+    .               v         +-----------+\n * |     |      |    .    +--------------+                    +------------+\n * |     +-----------.--->|EventPluginHub|                    |    Event   |\n * |            |    .    |              |     +-----------+  | Propagators|\n * | ReactEvent |    .    |              |     |TapEvent   |  |------------|\n * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|\n * |            |    .    |              |     +-----------+  |  utilities |\n * |     +-----------.--->|              |                    +------------+\n * |     |      |    .    +--------------+\n * +-----|------+    .                ^        +-----------+\n *       |           .                |        |Enter/Leave|\n *       +           .                +-------+|Plugin     |\n * +-------------+   .                         +-----------+\n * | application |   .\n * |-------------|   .\n * |             |   .\n * |             |   .\n * +-------------+   .\n *                   .\n *    React Core     .  General Purpose Event Plugin System\n */\n\nvar alreadyListeningTo = {};\nvar isMonitoringScrollValue = false;\nvar reactTopListenersCounter = 0;\n\n// For events like 'submit' which don't consistently bubble (which we trap at a\n// lower node than `document`), binding at `document` would cause duplicate\n// events so we don't include them here\nvar topEventMapping = {\n  topBlur: 'blur',\n  topChange: 'change',\n  topClick: 'click',\n  topCompositionEnd: 'compositionend',\n  topCompositionStart: 'compositionstart',\n  topCompositionUpdate: 'compositionupdate',\n  topContextMenu: 'contextmenu',\n  topCopy: 'copy',\n  topCut: 'cut',\n  topDoubleClick: 'dblclick',\n  topDrag: 'drag',\n  topDragEnd: 'dragend',\n  topDragEnter: 'dragenter',\n  topDragExit: 'dragexit',\n  topDragLeave: 'dragleave',\n  topDragOver: 'dragover',\n  topDragStart: 'dragstart',\n  topDrop: 'drop',\n  topFocus: 'focus',\n  topInput: 'input',\n  topKeyDown: 'keydown',\n  topKeyPress: 'keypress',\n  topKeyUp: 'keyup',\n  topMouseDown: 'mousedown',\n  topMouseMove: 'mousemove',\n  topMouseOut: 'mouseout',\n  topMouseOver: 'mouseover',\n  topMouseUp: 'mouseup',\n  topPaste: 'paste',\n  topScroll: 'scroll',\n  topSelectionChange: 'selectionchange',\n  topTouchCancel: 'touchcancel',\n  topTouchEnd: 'touchend',\n  topTouchMove: 'touchmove',\n  topTouchStart: 'touchstart',\n  topWheel: 'wheel'\n};\n\n/**\n * To ensure no conflicts with other potential React instances on the page\n */\nvar topListenersIDKey = \"_reactListenersID\" + String(Math.random()).slice(2);\n\nfunction getListeningForDocument(mountAt) {\n  if (mountAt[topListenersIDKey] == null) {\n    mountAt[topListenersIDKey] = reactTopListenersCounter++;\n    alreadyListeningTo[mountAt[topListenersIDKey]] = {};\n  }\n  return alreadyListeningTo[mountAt[topListenersIDKey]];\n}\n\n/**\n * Traps top-level events by using event bubbling.\n *\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {string} handlerBaseName Event name (e.g. \"click\").\n * @param {DOMEventTarget} element Element on which to attach listener.\n * @internal\n */\nfunction trapBubbledEvent(topLevelType, handlerBaseName, element) {\n  EventListener.listen(\n    element,\n    handlerBaseName,\n    ReactEventEmitter.TopLevelCallbackCreator.createTopLevelCallback(\n      topLevelType\n    )\n  );\n}\n\n/**\n * Traps a top-level event by using event capturing.\n *\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {string} handlerBaseName Event name (e.g. \"click\").\n * @param {DOMEventTarget} element Element on which to attach listener.\n * @internal\n */\nfunction trapCapturedEvent(topLevelType, handlerBaseName, element) {\n  EventListener.capture(\n    element,\n    handlerBaseName,\n    ReactEventEmitter.TopLevelCallbackCreator.createTopLevelCallback(\n      topLevelType\n    )\n  );\n}\n\n/**\n * `ReactEventEmitter` is used to attach top-level event listeners. For example:\n *\n *   ReactEventEmitter.putListener('myID', 'onClick', myFunction);\n *\n * This would allocate a \"registration\" of `('onClick', myFunction)` on 'myID'.\n *\n * @internal\n */\nvar ReactEventEmitter = merge(ReactEventEmitterMixin, {\n\n  /**\n   * React references `ReactEventTopLevelCallback` using this property in order\n   * to allow dependency injection.\n   */\n  TopLevelCallbackCreator: null,\n\n  injection: {\n    /**\n     * @param {function} TopLevelCallbackCreator\n     */\n    injectTopLevelCallbackCreator: function(TopLevelCallbackCreator) {\n      ReactEventEmitter.TopLevelCallbackCreator = TopLevelCallbackCreator;\n    }\n  },\n\n  /**\n   * Sets whether or not any created callbacks should be enabled.\n   *\n   * @param {boolean} enabled True if callbacks should be enabled.\n   */\n  setEnabled: function(enabled) {\n    (require('./React').__DEV__ === true ? invariant(\n      ExecutionEnvironment.canUseDOM,\n      'setEnabled(...): Cannot toggle event listening in a Worker thread. ' +\n      'This is likely a bug in the framework. Please report immediately.'\n    ) : invariant(ExecutionEnvironment.canUseDOM));\n    if (ReactEventEmitter.TopLevelCallbackCreator) {\n      ReactEventEmitter.TopLevelCallbackCreator.setEnabled(enabled);\n    }\n  },\n\n  /**\n   * @return {boolean} True if callbacks are enabled.\n   */\n  isEnabled: function() {\n    return !!(\n      ReactEventEmitter.TopLevelCallbackCreator &&\n      ReactEventEmitter.TopLevelCallbackCreator.isEnabled()\n    );\n  },\n\n  /**\n   * We listen for bubbled touch events on the document object.\n   *\n   * Firefox v8.01 (and possibly others) exhibited strange behavior when\n   * mounting `onmousemove` events at some node that was not the document\n   * element. The symptoms were that if your mouse is not moving over something\n   * contained within that mount point (for example on the background) the\n   * top-level listeners for `onmousemove` won't be called. However, if you\n   * register the `mousemove` on the document object, then it will of course\n   * catch all `mousemove`s. This along with iOS quirks, justifies restricting\n   * top-level listeners to the document object only, at least for these\n   * movement types of events and possibly all events.\n   *\n   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n   *\n   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but\n   * they bubble to document.\n   *\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @param {DOMDocument} contentDocument Document which owns the container\n   */\n  listenTo: function(registrationName, contentDocument) {\n    var mountAt = contentDocument;\n    var isListening = getListeningForDocument(mountAt);\n    var dependencies = EventPluginRegistry.\n      registrationNameDependencies[registrationName];\n\n    var topLevelTypes = EventConstants.topLevelTypes;\n    for (var i = 0, l = dependencies.length; i < l; i++) {\n      var dependency = dependencies[i];\n      if (!isListening[dependency]) {\n        var topLevelType = topLevelTypes[dependency];\n\n        if (topLevelType === topLevelTypes.topWheel) {\n          if (isEventSupported('wheel')) {\n            trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);\n          } else if (isEventSupported('mousewheel')) {\n            trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);\n          } else {\n            // Firefox needs to capture a different mouse scroll event.\n            // @see http://www.quirksmode.org/dom/events/tests/scroll.html\n            trapBubbledEvent(\n              topLevelTypes.topWheel,\n              'DOMMouseScroll',\n              mountAt);\n          }\n        } else if (topLevelType === topLevelTypes.topScroll) {\n\n          if (isEventSupported('scroll', true)) {\n            trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);\n          } else {\n            trapBubbledEvent(topLevelTypes.topScroll, 'scroll', window);\n          }\n        } else if (topLevelType === topLevelTypes.topFocus ||\n            topLevelType === topLevelTypes.topBlur) {\n\n          if (isEventSupported('focus', true)) {\n            trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);\n            trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);\n          } else if (isEventSupported('focusin')) {\n            // IE has `focusin` and `focusout` events which bubble.\n            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html\n            trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);\n            trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);\n          }\n\n          // to make sure blur and focus event listeners are only attached once\n          isListening[topLevelTypes.topBlur] = true;\n          isListening[topLevelTypes.topFocus] = true;\n        } else if (topEventMapping[dependency]) {\n          trapBubbledEvent(topLevelType, topEventMapping[dependency], mountAt);\n        }\n\n        isListening[dependency] = true;\n      }\n    }\n  },\n\n  /**\n   * Listens to window scroll and resize events. We cache scroll values so that\n   * application code can access them without triggering reflows.\n   *\n   * NOTE: Scroll events do not bubble.\n   *\n   * @see http://www.quirksmode.org/dom/events/scroll.html\n   */\n  ensureScrollValueMonitoring: function(){\n    if (!isMonitoringScrollValue) {\n      var refresh = ViewportMetrics.refreshScrollValues;\n      EventListener.listen(window, 'scroll', refresh);\n      EventListener.listen(window, 'resize', refresh);\n      isMonitoringScrollValue = true;\n    }\n  },\n\n  eventNameDispatchConfigs: EventPluginHub.eventNameDispatchConfigs,\n\n  registrationNameModules: EventPluginHub.registrationNameModules,\n\n  putListener: EventPluginHub.putListener,\n\n  getListener: EventPluginHub.getListener,\n\n  deleteListener: EventPluginHub.deleteListener,\n\n  deleteAllListeners: EventPluginHub.deleteAllListeners,\n\n  trapBubbledEvent: trapBubbledEvent,\n\n  trapCapturedEvent: trapCapturedEvent\n\n});\n\nmodule.exports = ReactEventEmitter;\n"]},"metadata":{},"sourceType":"script"}