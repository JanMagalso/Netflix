{"ast":null,"code":"/**\n * Copyright 2013-2014 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule ReactDOMButton\n */\n\"use strict\";\n\nvar AutoFocusMixin = require(\"./AutoFocusMixin\");\n\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\n\nvar ReactCompositeComponent = require(\"./ReactCompositeComponent\");\n\nvar ReactDOM = require(\"./ReactDOM\");\n\nvar keyMirror = require(\"./keyMirror\"); // Store a reference to the <button> `ReactDOMComponent`.\n\n\nvar button = ReactDOM.button;\nvar mouseListenerNames = keyMirror({\n  onClick: true,\n  onDoubleClick: true,\n  onMouseDown: true,\n  onMouseMove: true,\n  onMouseUp: true,\n  onClickCapture: true,\n  onDoubleClickCapture: true,\n  onMouseDownCapture: true,\n  onMouseMoveCapture: true,\n  onMouseUpCapture: true\n});\n/**\n * Implements a <button> native component that does not receive mouse events\n * when `disabled` is set.\n */\n\nvar ReactDOMButton = ReactCompositeComponent.createClass({\n  displayName: 'ReactDOMButton',\n  mixins: [AutoFocusMixin, ReactBrowserComponentMixin],\n  render: function () {\n    var props = {}; // Copy the props; except the mouse listeners if we're disabled\n\n    for (var key in this.props) {\n      if (this.props.hasOwnProperty(key) && (!this.props.disabled || !mouseListenerNames[key])) {\n        props[key] = this.props[key];\n      }\n    }\n\n    return button(props, this.props.children);\n  }\n});\nmodule.exports = ReactDOMButton;","map":{"version":3,"sources":["/home/dna-dev/Documents/react-web/node_modules/react-component/lib/ReactDOMButton.js"],"names":["AutoFocusMixin","require","ReactBrowserComponentMixin","ReactCompositeComponent","ReactDOM","keyMirror","button","mouseListenerNames","onClick","onDoubleClick","onMouseDown","onMouseMove","onMouseUp","onClickCapture","onDoubleClickCapture","onMouseDownCapture","onMouseMoveCapture","onMouseUpCapture","ReactDOMButton","createClass","displayName","mixins","render","props","key","hasOwnProperty","disabled","children","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,cAAc,GAAGC,OAAO,CAAC,kBAAD,CAA5B;;AACA,IAAIC,0BAA0B,GAAGD,OAAO,CAAC,8BAAD,CAAxC;;AACA,IAAIE,uBAAuB,GAAGF,OAAO,CAAC,2BAAD,CAArC;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,YAAD,CAAtB;;AAEA,IAAII,SAAS,GAAGJ,OAAO,CAAC,aAAD,CAAvB,C,CAEA;;;AACA,IAAIK,MAAM,GAAGF,QAAQ,CAACE,MAAtB;AAEA,IAAIC,kBAAkB,GAAGF,SAAS,CAAC;AACjCG,EAAAA,OAAO,EAAE,IADwB;AAEjCC,EAAAA,aAAa,EAAE,IAFkB;AAGjCC,EAAAA,WAAW,EAAE,IAHoB;AAIjCC,EAAAA,WAAW,EAAE,IAJoB;AAKjCC,EAAAA,SAAS,EAAE,IALsB;AAMjCC,EAAAA,cAAc,EAAE,IANiB;AAOjCC,EAAAA,oBAAoB,EAAE,IAPW;AAQjCC,EAAAA,kBAAkB,EAAE,IARa;AASjCC,EAAAA,kBAAkB,EAAE,IATa;AAUjCC,EAAAA,gBAAgB,EAAE;AAVe,CAAD,CAAlC;AAaA;AACA;AACA;AACA;;AACA,IAAIC,cAAc,GAAGf,uBAAuB,CAACgB,WAAxB,CAAoC;AACvDC,EAAAA,WAAW,EAAE,gBAD0C;AAGvDC,EAAAA,MAAM,EAAE,CAACrB,cAAD,EAAiBE,0BAAjB,CAH+C;AAKvDoB,EAAAA,MAAM,EAAE,YAAW;AACjB,QAAIC,KAAK,GAAG,EAAZ,CADiB,CAGjB;;AACA,SAAK,IAAIC,GAAT,IAAgB,KAAKD,KAArB,EAA4B;AAC1B,UAAI,KAAKA,KAAL,CAAWE,cAAX,CAA0BD,GAA1B,MACC,CAAC,KAAKD,KAAL,CAAWG,QAAZ,IAAwB,CAACnB,kBAAkB,CAACiB,GAAD,CAD5C,CAAJ,EACwD;AACtDD,QAAAA,KAAK,CAACC,GAAD,CAAL,GAAa,KAAKD,KAAL,CAAWC,GAAX,CAAb;AACD;AACF;;AAED,WAAOlB,MAAM,CAACiB,KAAD,EAAQ,KAAKA,KAAL,CAAWI,QAAnB,CAAb;AACD;AAjBsD,CAApC,CAArB;AAqBAC,MAAM,CAACC,OAAP,GAAiBX,cAAjB","sourcesContent":["/**\n * Copyright 2013-2014 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule ReactDOMButton\n */\n\n\"use strict\";\n\nvar AutoFocusMixin = require(\"./AutoFocusMixin\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactCompositeComponent = require(\"./ReactCompositeComponent\");\nvar ReactDOM = require(\"./ReactDOM\");\n\nvar keyMirror = require(\"./keyMirror\");\n\n// Store a reference to the <button> `ReactDOMComponent`.\nvar button = ReactDOM.button;\n\nvar mouseListenerNames = keyMirror({\n  onClick: true,\n  onDoubleClick: true,\n  onMouseDown: true,\n  onMouseMove: true,\n  onMouseUp: true,\n  onClickCapture: true,\n  onDoubleClickCapture: true,\n  onMouseDownCapture: true,\n  onMouseMoveCapture: true,\n  onMouseUpCapture: true\n});\n\n/**\n * Implements a <button> native component that does not receive mouse events\n * when `disabled` is set.\n */\nvar ReactDOMButton = ReactCompositeComponent.createClass({\n  displayName: 'ReactDOMButton',\n\n  mixins: [AutoFocusMixin, ReactBrowserComponentMixin],\n\n  render: function() {\n    var props = {};\n\n    // Copy the props; except the mouse listeners if we're disabled\n    for (var key in this.props) {\n      if (this.props.hasOwnProperty(key) &&\n          (!this.props.disabled || !mouseListenerNames[key])) {\n        props[key] = this.props[key];\n      }\n    }\n\n    return button(props, this.props.children);\n  }\n\n});\n\nmodule.exports = ReactDOMButton;\n"]},"metadata":{},"sourceType":"script"}