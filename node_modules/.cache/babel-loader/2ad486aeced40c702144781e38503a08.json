{"ast":null,"code":"/**\n * Copyright 2013-2014 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule EventPluginUtils\n */\n\"use strict\";\n\nvar EventConstants = require(\"./EventConstants\");\n\nvar invariant = require(\"./invariant\");\n/**\n * Injected dependencies:\n */\n\n/**\n * - `Mount`: [required] Module that can convert between React dom IDs and\n *   actual node references.\n */\n\n\nvar injection = {\n  Mount: null,\n  injectMount: function (InjectedMount) {\n    injection.Mount = InjectedMount;\n\n    if (require('./React').__DEV__ === true) {\n      require('./React').__DEV__ === true ? invariant(InjectedMount && InjectedMount.getNode, 'EventPluginUtils.injection.injectMount(...): Injected Mount module ' + 'is missing getNode.') : invariant(InjectedMount && InjectedMount.getNode);\n    }\n  }\n};\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nfunction isEndish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;\n}\n\nfunction isMoveish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;\n}\n\nfunction isStartish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;\n}\n\nvar validateEventDispatches;\n\nif (require('./React').__DEV__ === true) {\n  validateEventDispatches = function (event) {\n    var dispatchListeners = event._dispatchListeners;\n    var dispatchIDs = event._dispatchIDs;\n    var listenersIsArr = Array.isArray(dispatchListeners);\n    var idsIsArr = Array.isArray(dispatchIDs);\n    var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;\n    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;\n    require('./React').__DEV__ === true ? invariant(idsIsArr === listenersIsArr && IDsLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : invariant(idsIsArr === listenersIsArr && IDsLen === listenersLen);\n  };\n}\n/**\n * Invokes `cb(event, listener, id)`. Avoids using call if no scope is\n * provided. The `(listener,id)` pair effectively forms the \"dispatch\" but are\n * kept separate to conserve memory.\n */\n\n\nfunction forEachEventDispatch(event, cb) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchIDs = event._dispatchIDs;\n\n  if (require('./React').__DEV__ === true) {\n    validateEventDispatches(event);\n  }\n\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      } // Listeners and IDs are two parallel arrays that are always in sync.\n\n\n      cb(event, dispatchListeners[i], dispatchIDs[i]);\n    }\n  } else if (dispatchListeners) {\n    cb(event, dispatchListeners, dispatchIDs);\n  }\n}\n/**\n * Default implementation of PluginModule.executeDispatch().\n * @param {SyntheticEvent} SyntheticEvent to handle\n * @param {function} Application-level callback\n * @param {string} domID DOM id to pass to the callback.\n */\n\n\nfunction executeDispatch(event, listener, domID) {\n  event.currentTarget = injection.Mount.getNode(domID);\n  var returnValue = listener(event, domID);\n  event.currentTarget = null;\n  return returnValue;\n}\n/**\n * Standard/simple iteration through an event's collected dispatches.\n */\n\n\nfunction executeDispatchesInOrder(event, executeDispatch) {\n  forEachEventDispatch(event, executeDispatch);\n  event._dispatchListeners = null;\n  event._dispatchIDs = null;\n}\n/**\n * Standard/simple iteration through an event's collected dispatches, but stops\n * at the first dispatch execution returning true, and returns that id.\n *\n * @return id of the first dispatch execution who's listener returns true, or\n * null if no listener returned true.\n */\n\n\nfunction executeDispatchesInOrderStopAtTrue(event) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchIDs = event._dispatchIDs;\n\n  if (require('./React').__DEV__ === true) {\n    validateEventDispatches(event);\n  }\n\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      } // Listeners and IDs are two parallel arrays that are always in sync.\n\n\n      if (dispatchListeners[i](event, dispatchIDs[i])) {\n        return dispatchIDs[i];\n      }\n    }\n  } else if (dispatchListeners) {\n    if (dispatchListeners(event, dispatchIDs)) {\n      return dispatchIDs;\n    }\n  }\n\n  return null;\n}\n/**\n * Execution of a \"direct\" dispatch - there must be at most one dispatch\n * accumulated on the event or it is considered an error. It doesn't really make\n * sense for an event with multiple dispatches (bubbled) to keep track of the\n * return values at each dispatch execution, but it does tend to make sense when\n * dealing with \"direct\" dispatches.\n *\n * @return The return value of executing the single dispatch.\n */\n\n\nfunction executeDirectDispatch(event) {\n  if (require('./React').__DEV__ === true) {\n    validateEventDispatches(event);\n  }\n\n  var dispatchListener = event._dispatchListeners;\n  var dispatchID = event._dispatchIDs;\n  require('./React').__DEV__ === true ? invariant(!Array.isArray(dispatchListener), 'executeDirectDispatch(...): Invalid `event`.') : invariant(!Array.isArray(dispatchListener));\n  var res = dispatchListener ? dispatchListener(event, dispatchID) : null;\n  event._dispatchListeners = null;\n  event._dispatchIDs = null;\n  return res;\n}\n/**\n * @param {SyntheticEvent} event\n * @return {bool} True iff number of dispatches accumulated is greater than 0.\n */\n\n\nfunction hasDispatches(event) {\n  return !!event._dispatchListeners;\n}\n/**\n * General utilities that are useful in creating custom Event Plugins.\n */\n\n\nvar EventPluginUtils = {\n  isEndish: isEndish,\n  isMoveish: isMoveish,\n  isStartish: isStartish,\n  executeDirectDispatch: executeDirectDispatch,\n  executeDispatch: executeDispatch,\n  executeDispatchesInOrder: executeDispatchesInOrder,\n  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,\n  hasDispatches: hasDispatches,\n  injection: injection,\n  useTouchEvents: false\n};\nmodule.exports = EventPluginUtils;","map":{"version":3,"sources":["/home/dna-dev/Documents/react-web/node_modules/react-component/lib/EventPluginUtils.js"],"names":["EventConstants","require","invariant","injection","Mount","injectMount","InjectedMount","__DEV__","getNode","topLevelTypes","isEndish","topLevelType","topMouseUp","topTouchEnd","topTouchCancel","isMoveish","topMouseMove","topTouchMove","isStartish","topMouseDown","topTouchStart","validateEventDispatches","event","dispatchListeners","_dispatchListeners","dispatchIDs","_dispatchIDs","listenersIsArr","Array","isArray","idsIsArr","IDsLen","length","listenersLen","forEachEventDispatch","cb","i","isPropagationStopped","executeDispatch","listener","domID","currentTarget","returnValue","executeDispatchesInOrder","executeDispatchesInOrderStopAtTrue","executeDirectDispatch","dispatchListener","dispatchID","res","hasDispatches","EventPluginUtils","useTouchEvents","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2013-2014 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule EventPluginUtils\n */\n\n\"use strict\";\n\nvar EventConstants = require(\"./EventConstants\");\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Injected dependencies:\n */\n\n/**\n * - `Mount`: [required] Module that can convert between React dom IDs and\n *   actual node references.\n */\nvar injection = {\n  Mount: null,\n  injectMount: function(InjectedMount) {\n    injection.Mount = InjectedMount;\n    if (require('./React').__DEV__ === true) {\n      (require('./React').__DEV__ === true ? invariant(\n        InjectedMount && InjectedMount.getNode,\n        'EventPluginUtils.injection.injectMount(...): Injected Mount module ' +\n        'is missing getNode.'\n      ) : invariant(InjectedMount && InjectedMount.getNode));\n    }\n  }\n};\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nfunction isEndish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseUp ||\n         topLevelType === topLevelTypes.topTouchEnd ||\n         topLevelType === topLevelTypes.topTouchCancel;\n}\n\nfunction isMoveish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseMove ||\n         topLevelType === topLevelTypes.topTouchMove;\n}\nfunction isStartish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseDown ||\n         topLevelType === topLevelTypes.topTouchStart;\n}\n\n\nvar validateEventDispatches;\nif (require('./React').__DEV__ === true) {\n  validateEventDispatches = function(event) {\n    var dispatchListeners = event._dispatchListeners;\n    var dispatchIDs = event._dispatchIDs;\n\n    var listenersIsArr = Array.isArray(dispatchListeners);\n    var idsIsArr = Array.isArray(dispatchIDs);\n    var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;\n    var listenersLen = listenersIsArr ?\n      dispatchListeners.length :\n      dispatchListeners ? 1 : 0;\n\n    (require('./React').__DEV__ === true ? invariant(\n      idsIsArr === listenersIsArr && IDsLen === listenersLen,\n      'EventPluginUtils: Invalid `event`.'\n    ) : invariant(idsIsArr === listenersIsArr && IDsLen === listenersLen));\n  };\n}\n\n/**\n * Invokes `cb(event, listener, id)`. Avoids using call if no scope is\n * provided. The `(listener,id)` pair effectively forms the \"dispatch\" but are\n * kept separate to conserve memory.\n */\nfunction forEachEventDispatch(event, cb) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchIDs = event._dispatchIDs;\n  if (require('./React').__DEV__ === true) {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and IDs are two parallel arrays that are always in sync.\n      cb(event, dispatchListeners[i], dispatchIDs[i]);\n    }\n  } else if (dispatchListeners) {\n    cb(event, dispatchListeners, dispatchIDs);\n  }\n}\n\n/**\n * Default implementation of PluginModule.executeDispatch().\n * @param {SyntheticEvent} SyntheticEvent to handle\n * @param {function} Application-level callback\n * @param {string} domID DOM id to pass to the callback.\n */\nfunction executeDispatch(event, listener, domID) {\n  event.currentTarget = injection.Mount.getNode(domID);\n  var returnValue = listener(event, domID);\n  event.currentTarget = null;\n  return returnValue;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches.\n */\nfunction executeDispatchesInOrder(event, executeDispatch) {\n  forEachEventDispatch(event, executeDispatch);\n  event._dispatchListeners = null;\n  event._dispatchIDs = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches, but stops\n * at the first dispatch execution returning true, and returns that id.\n *\n * @return id of the first dispatch execution who's listener returns true, or\n * null if no listener returned true.\n */\nfunction executeDispatchesInOrderStopAtTrue(event) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchIDs = event._dispatchIDs;\n  if (require('./React').__DEV__ === true) {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and IDs are two parallel arrays that are always in sync.\n      if (dispatchListeners[i](event, dispatchIDs[i])) {\n        return dispatchIDs[i];\n      }\n    }\n  } else if (dispatchListeners) {\n    if (dispatchListeners(event, dispatchIDs)) {\n      return dispatchIDs;\n    }\n  }\n  return null;\n}\n\n/**\n * Execution of a \"direct\" dispatch - there must be at most one dispatch\n * accumulated on the event or it is considered an error. It doesn't really make\n * sense for an event with multiple dispatches (bubbled) to keep track of the\n * return values at each dispatch execution, but it does tend to make sense when\n * dealing with \"direct\" dispatches.\n *\n * @return The return value of executing the single dispatch.\n */\nfunction executeDirectDispatch(event) {\n  if (require('./React').__DEV__ === true) {\n    validateEventDispatches(event);\n  }\n  var dispatchListener = event._dispatchListeners;\n  var dispatchID = event._dispatchIDs;\n  (require('./React').__DEV__ === true ? invariant(\n    !Array.isArray(dispatchListener),\n    'executeDirectDispatch(...): Invalid `event`.'\n  ) : invariant(!Array.isArray(dispatchListener)));\n  var res = dispatchListener ?\n    dispatchListener(event, dispatchID) :\n    null;\n  event._dispatchListeners = null;\n  event._dispatchIDs = null;\n  return res;\n}\n\n/**\n * @param {SyntheticEvent} event\n * @return {bool} True iff number of dispatches accumulated is greater than 0.\n */\nfunction hasDispatches(event) {\n  return !!event._dispatchListeners;\n}\n\n/**\n * General utilities that are useful in creating custom Event Plugins.\n */\nvar EventPluginUtils = {\n  isEndish: isEndish,\n  isMoveish: isMoveish,\n  isStartish: isStartish,\n\n  executeDirectDispatch: executeDirectDispatch,\n  executeDispatch: executeDispatch,\n  executeDispatchesInOrder: executeDispatchesInOrder,\n  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,\n  hasDispatches: hasDispatches,\n  injection: injection,\n  useTouchEvents: false\n};\n\nmodule.exports = EventPluginUtils;\n"]},"metadata":{},"sourceType":"script"}