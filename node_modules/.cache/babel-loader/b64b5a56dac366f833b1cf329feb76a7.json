{"ast":null,"code":"var _jsxFileName = \"/home/dna-dev/Documents/react-web/src/components/ProtectedRoute.jsx\";\nimport React from 'react';\nimport { component } from 'react-component/lib/ReactPropTypes';\nimport { Route, Redirect } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = _ref => {\n  let {\n    isAuth: isAuth,\n    component: Component,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      if (isAuth) {\n        return /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 24\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: '/',\n            state: {\n              from: props.location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 24\n        }, this);\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, this);\n};\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/home/dna-dev/Documents/react-web/src/components/ProtectedRoute.jsx"],"names":["React","component","Route","Redirect","ProtectedRoute","isAuth","Component","rest","props","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,oCAA1B;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,cAAhC;;;AAEA,MAAMC,cAAc,GAAG,QAAsD;AAAA,MAArD;AAACC,IAAAA,MAAM,EAAEA,MAAT;AAAiBJ,IAAAA,SAAS,EAAGK,SAA7B;AAAwC,OAAGC;AAA3C,GAAqD;AAC3E,sBACA,QAAC,KAAD,OACUA,IADV;AAEU,IAAA,MAAM,EAAGC,KAAD,IAAS;AACjB,UAAGH,MAAH,EAAU;AACN,4BAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD,MAEM;AACF,4BAAO,QAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAACI,YAAAA,QAAQ,EAAE,GAAX;AAAeC,YAAAA,KAAK,EAAE;AAAEC,cAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAAtB;AAAd;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH;AACJ;AARP;AAAA;AAAA;AAAA;AAAA,UADA;AAWD,CAZD;;KAAMR,c;AAcN,eAAeA,cAAf","sourcesContent":["import React from 'react'\nimport { component } from 'react-component/lib/ReactPropTypes';\nimport { Route, Redirect } from 'react-router'\n\nconst ProtectedRoute = ({isAuth: isAuth, component : Component, ...rest}) => {\n  return (\n  <Route \n        {...rest} \n            render={(props)=>{\n            if(isAuth){\n                return <Component />\n            } else{\n                return <Redirect to={{pathname: '/',state: { from: props.location } }} />\n            }\n        }} />\n  )\n}\n\nexport default ProtectedRoute"]},"metadata":{},"sourceType":"module"}