{"ast":null,"code":"/**\n * Copyright 2013-2014 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule ReactPerf\n * @typechecks static-only\n */\n\"use strict\";\n/**\n * ReactPerf is a general AOP system designed to measure performance. This\n * module only has the hooks: see ReactDefaultPerf for the analysis tool.\n */\n\nvar ReactPerf = {\n  /**\n   * Boolean to enable/disable measurement. Set to false by default to prevent\n   * accidental logging and perf loss.\n   */\n  enableMeasure: false,\n\n  /**\n   * Holds onto the measure function in use. By default, don't measure\n   * anything, but we'll override this if we inject a measure function.\n   */\n  storedMeasure: _noMeasure,\n\n  /**\n   * Use this to wrap methods you want to measure. Zero overhead in production.\n   *\n   * @param {string} objName\n   * @param {string} fnName\n   * @param {function} func\n   * @return {function}\n   */\n  measure: function (objName, fnName, func) {\n    if (require('./React').__DEV__ === true) {\n      var measuredFunc = null;\n      return function () {\n        if (ReactPerf.enableMeasure) {\n          if (!measuredFunc) {\n            measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);\n          }\n\n          return measuredFunc.apply(this, arguments);\n        }\n\n        return func.apply(this, arguments);\n      };\n    }\n\n    return func;\n  },\n  injection: {\n    /**\n     * @param {function} measure\n     */\n    injectMeasure: function (measure) {\n      ReactPerf.storedMeasure = measure;\n    }\n  }\n};\n/**\n * Simply passes through the measured function, without measuring it.\n *\n * @param {string} objName\n * @param {string} fnName\n * @param {function} func\n * @return {function}\n */\n\nfunction _noMeasure(objName, fnName, func) {\n  return func;\n}\n\nmodule.exports = ReactPerf;","map":{"version":3,"sources":["/home/dna-dev/Documents/react-web/node_modules/react-component/lib/ReactPerf.js"],"names":["ReactPerf","enableMeasure","storedMeasure","_noMeasure","measure","objName","fnName","func","require","__DEV__","measuredFunc","apply","arguments","injection","injectMeasure","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;AACA,IAAIA,SAAS,GAAG;AACd;AACF;AACA;AACA;AACEC,EAAAA,aAAa,EAAE,KALD;;AAOd;AACF;AACA;AACA;AACEC,EAAAA,aAAa,EAAEC,UAXD;;AAad;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,OAAO,EAAE,UAASC,OAAT,EAAkBC,MAAlB,EAA0BC,IAA1B,EAAgC;AACvC,QAAIC,OAAO,CAAC,SAAD,CAAP,CAAmBC,OAAnB,KAA+B,IAAnC,EAAyC;AACvC,UAAIC,YAAY,GAAG,IAAnB;AACA,aAAO,YAAW;AAChB,YAAIV,SAAS,CAACC,aAAd,EAA6B;AAC3B,cAAI,CAACS,YAAL,EAAmB;AACjBA,YAAAA,YAAY,GAAGV,SAAS,CAACE,aAAV,CAAwBG,OAAxB,EAAiCC,MAAjC,EAAyCC,IAAzC,CAAf;AACD;;AACD,iBAAOG,YAAY,CAACC,KAAb,CAAmB,IAAnB,EAAyBC,SAAzB,CAAP;AACD;;AACD,eAAOL,IAAI,CAACI,KAAL,CAAW,IAAX,EAAiBC,SAAjB,CAAP;AACD,OARD;AASD;;AACD,WAAOL,IAAP;AACD,GAnCa;AAqCdM,EAAAA,SAAS,EAAE;AACT;AACJ;AACA;AACIC,IAAAA,aAAa,EAAE,UAASV,OAAT,EAAkB;AAC/BJ,MAAAA,SAAS,CAACE,aAAV,GAA0BE,OAA1B;AACD;AANQ;AArCG,CAAhB;AA+CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASD,UAAT,CAAoBE,OAApB,EAA6BC,MAA7B,EAAqCC,IAArC,EAA2C;AACzC,SAAOA,IAAP;AACD;;AAEDQ,MAAM,CAACC,OAAP,GAAiBhB,SAAjB","sourcesContent":["/**\n * Copyright 2013-2014 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule ReactPerf\n * @typechecks static-only\n */\n\n\"use strict\";\n\n/**\n * ReactPerf is a general AOP system designed to measure performance. This\n * module only has the hooks: see ReactDefaultPerf for the analysis tool.\n */\nvar ReactPerf = {\n  /**\n   * Boolean to enable/disable measurement. Set to false by default to prevent\n   * accidental logging and perf loss.\n   */\n  enableMeasure: false,\n\n  /**\n   * Holds onto the measure function in use. By default, don't measure\n   * anything, but we'll override this if we inject a measure function.\n   */\n  storedMeasure: _noMeasure,\n\n  /**\n   * Use this to wrap methods you want to measure. Zero overhead in production.\n   *\n   * @param {string} objName\n   * @param {string} fnName\n   * @param {function} func\n   * @return {function}\n   */\n  measure: function(objName, fnName, func) {\n    if (require('./React').__DEV__ === true) {\n      var measuredFunc = null;\n      return function() {\n        if (ReactPerf.enableMeasure) {\n          if (!measuredFunc) {\n            measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);\n          }\n          return measuredFunc.apply(this, arguments);\n        }\n        return func.apply(this, arguments);\n      };\n    }\n    return func;\n  },\n\n  injection: {\n    /**\n     * @param {function} measure\n     */\n    injectMeasure: function(measure) {\n      ReactPerf.storedMeasure = measure;\n    }\n  }\n};\n\n/**\n * Simply passes through the measured function, without measuring it.\n *\n * @param {string} objName\n * @param {string} fnName\n * @param {function} func\n * @return {function}\n */\nfunction _noMeasure(objName, fnName, func) {\n  return func;\n}\n\nmodule.exports = ReactPerf;\n"]},"metadata":{},"sourceType":"script"}