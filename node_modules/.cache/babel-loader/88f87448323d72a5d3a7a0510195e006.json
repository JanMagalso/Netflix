{"ast":null,"code":"/**\n * Copyright 2013-2014 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule ReactEventTopLevelCallback\n * @typechecks static-only\n */\n\"use strict\";\n\nvar PooledClass = require(\"./PooledClass\");\n\nvar ReactEventEmitter = require(\"./ReactEventEmitter\");\n\nvar ReactInstanceHandles = require(\"./ReactInstanceHandles\");\n\nvar ReactMount = require(\"./ReactMount\");\n\nvar getEventTarget = require(\"./getEventTarget\");\n\nvar mixInto = require(\"./mixInto\");\n/**\n * @type {boolean}\n * @private\n */\n\n\nvar _topLevelListenersEnabled = true;\n/**\n * Finds the parent React component of `node`.\n *\n * @param {*} node\n * @return {?DOMEventTarget} Parent container, or `null` if the specified node\n *                           is not nested.\n */\n\nfunction findParent(node) {\n  // TODO: It may be a good idea to cache this to prevent unnecessary DOM\n  // traversal, but caching is difficult to do correctly without using a\n  // mutation observer to listen for all DOM changes.\n  var nodeID = ReactMount.getID(node);\n  var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);\n  var container = ReactMount.findReactContainerForID(rootID);\n  var parent = ReactMount.getFirstReactDOM(container);\n  return parent;\n}\n/**\n * Calls ReactEventEmitter.handleTopLevel for each node stored in bookKeeping's\n * ancestor list. Separated from createTopLevelCallback to avoid try/finally\n * deoptimization.\n *\n * @param {string} topLevelType\n * @param {DOMEvent} nativeEvent\n * @param {TopLevelCallbackBookKeeping} bookKeeping\n */\n\n\nfunction handleTopLevelImpl(topLevelType, nativeEvent, bookKeeping) {\n  var topLevelTarget = ReactMount.getFirstReactDOM(getEventTarget(nativeEvent)) || window; // Loop through the hierarchy, in case there's any nested components.\n  // It's important that we build the array of ancestors before calling any\n  // event handlers, because event handlers can modify the DOM, leading to\n  // inconsistencies with ReactMount's node cache. See #1105.\n\n  var ancestor = topLevelTarget;\n\n  while (ancestor) {\n    bookKeeping.ancestors.push(ancestor);\n    ancestor = findParent(ancestor);\n  }\n\n  for (var i = 0, l = bookKeeping.ancestors.length; i < l; i++) {\n    topLevelTarget = bookKeeping.ancestors[i];\n    var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';\n    ReactEventEmitter.handleTopLevel(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent);\n  }\n} // Used to store ancestor hierarchy in top level callback\n\n\nfunction TopLevelCallbackBookKeeping() {\n  this.ancestors = [];\n}\n\nmixInto(TopLevelCallbackBookKeeping, {\n  destructor: function () {\n    this.ancestors.length = 0;\n  }\n});\nPooledClass.addPoolingTo(TopLevelCallbackBookKeeping);\n/**\n * Top-level callback creator used to implement event handling using delegation.\n * This is used via dependency injection.\n */\n\nvar ReactEventTopLevelCallback = {\n  /**\n   * Sets whether or not any created callbacks should be enabled.\n   *\n   * @param {boolean} enabled True if callbacks should be enabled.\n   */\n  setEnabled: function (enabled) {\n    _topLevelListenersEnabled = !!enabled;\n  },\n\n  /**\n   * @return {boolean} True if callbacks are enabled.\n   */\n  isEnabled: function () {\n    return _topLevelListenersEnabled;\n  },\n\n  /**\n   * Creates a callback for the supplied `topLevelType` that could be added as\n   * a listener to the document. The callback computes a `topLevelTarget` which\n   * should be the root node of a mounted React component where the listener\n   * is attached.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @return {function} Callback for handling top-level events.\n   */\n  createTopLevelCallback: function (topLevelType) {\n    return function (nativeEvent) {\n      if (!_topLevelListenersEnabled) {\n        return;\n      }\n\n      var bookKeeping = TopLevelCallbackBookKeeping.getPooled();\n\n      try {\n        handleTopLevelImpl(topLevelType, nativeEvent, bookKeeping);\n      } finally {\n        TopLevelCallbackBookKeeping.release(bookKeeping);\n      }\n    };\n  }\n};\nmodule.exports = ReactEventTopLevelCallback;","map":{"version":3,"sources":["/home/dna-dev/Documents/react-web/node_modules/react-component/lib/ReactEventTopLevelCallback.js"],"names":["PooledClass","require","ReactEventEmitter","ReactInstanceHandles","ReactMount","getEventTarget","mixInto","_topLevelListenersEnabled","findParent","node","nodeID","getID","rootID","getReactRootIDFromNodeID","container","findReactContainerForID","parent","getFirstReactDOM","handleTopLevelImpl","topLevelType","nativeEvent","bookKeeping","topLevelTarget","window","ancestor","ancestors","push","i","l","length","topLevelTargetID","handleTopLevel","TopLevelCallbackBookKeeping","destructor","addPoolingTo","ReactEventTopLevelCallback","setEnabled","enabled","isEnabled","createTopLevelCallback","getPooled","release","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2013-2014 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule ReactEventTopLevelCallback\n * @typechecks static-only\n */\n\n\"use strict\";\n\nvar PooledClass = require(\"./PooledClass\");\nvar ReactEventEmitter = require(\"./ReactEventEmitter\");\nvar ReactInstanceHandles = require(\"./ReactInstanceHandles\");\nvar ReactMount = require(\"./ReactMount\");\n\nvar getEventTarget = require(\"./getEventTarget\");\nvar mixInto = require(\"./mixInto\");\n\n/**\n * @type {boolean}\n * @private\n */\nvar _topLevelListenersEnabled = true;\n\n/**\n * Finds the parent React component of `node`.\n *\n * @param {*} node\n * @return {?DOMEventTarget} Parent container, or `null` if the specified node\n *                           is not nested.\n */\nfunction findParent(node) {\n  // TODO: It may be a good idea to cache this to prevent unnecessary DOM\n  // traversal, but caching is difficult to do correctly without using a\n  // mutation observer to listen for all DOM changes.\n  var nodeID = ReactMount.getID(node);\n  var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);\n  var container = ReactMount.findReactContainerForID(rootID);\n  var parent = ReactMount.getFirstReactDOM(container);\n  return parent;\n}\n\n/**\n * Calls ReactEventEmitter.handleTopLevel for each node stored in bookKeeping's\n * ancestor list. Separated from createTopLevelCallback to avoid try/finally\n * deoptimization.\n *\n * @param {string} topLevelType\n * @param {DOMEvent} nativeEvent\n * @param {TopLevelCallbackBookKeeping} bookKeeping\n */\nfunction handleTopLevelImpl(topLevelType, nativeEvent, bookKeeping) {\n  var topLevelTarget = ReactMount.getFirstReactDOM(\n    getEventTarget(nativeEvent)\n  ) || window;\n\n  // Loop through the hierarchy, in case there's any nested components.\n  // It's important that we build the array of ancestors before calling any\n  // event handlers, because event handlers can modify the DOM, leading to\n  // inconsistencies with ReactMount's node cache. See #1105.\n  var ancestor = topLevelTarget;\n  while (ancestor) {\n    bookKeeping.ancestors.push(ancestor);\n    ancestor = findParent(ancestor);\n  }\n\n  for (var i = 0, l = bookKeeping.ancestors.length; i < l; i++) {\n    topLevelTarget = bookKeeping.ancestors[i];\n    var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';\n    ReactEventEmitter.handleTopLevel(\n      topLevelType,\n      topLevelTarget,\n      topLevelTargetID,\n      nativeEvent\n    );\n  }\n}\n\n// Used to store ancestor hierarchy in top level callback\nfunction TopLevelCallbackBookKeeping() {\n  this.ancestors = [];\n}\nmixInto(TopLevelCallbackBookKeeping, {\n  destructor: function() {\n    this.ancestors.length = 0;\n  }\n});\nPooledClass.addPoolingTo(TopLevelCallbackBookKeeping);\n\n/**\n * Top-level callback creator used to implement event handling using delegation.\n * This is used via dependency injection.\n */\nvar ReactEventTopLevelCallback = {\n\n  /**\n   * Sets whether or not any created callbacks should be enabled.\n   *\n   * @param {boolean} enabled True if callbacks should be enabled.\n   */\n  setEnabled: function(enabled) {\n    _topLevelListenersEnabled = !!enabled;\n  },\n\n  /**\n   * @return {boolean} True if callbacks are enabled.\n   */\n  isEnabled: function() {\n    return _topLevelListenersEnabled;\n  },\n\n  /**\n   * Creates a callback for the supplied `topLevelType` that could be added as\n   * a listener to the document. The callback computes a `topLevelTarget` which\n   * should be the root node of a mounted React component where the listener\n   * is attached.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @return {function} Callback for handling top-level events.\n   */\n  createTopLevelCallback: function(topLevelType) {\n    return function(nativeEvent) {\n      if (!_topLevelListenersEnabled) {\n        return;\n      }\n\n      var bookKeeping = TopLevelCallbackBookKeeping.getPooled();\n      try {\n        handleTopLevelImpl(topLevelType, nativeEvent, bookKeeping);\n      } finally {\n        TopLevelCallbackBookKeeping.release(bookKeeping);\n      }\n    };\n  }\n\n};\n\nmodule.exports = ReactEventTopLevelCallback;\n"]},"metadata":{},"sourceType":"script"}