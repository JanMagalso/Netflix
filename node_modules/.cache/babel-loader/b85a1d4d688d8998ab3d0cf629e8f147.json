{"ast":null,"code":"/**\n * Copyright 2013-2014 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule ReactDOMImg\n */\n\"use strict\";\n\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\n\nvar ReactCompositeComponent = require(\"./ReactCompositeComponent\");\n\nvar ReactDOM = require(\"./ReactDOM\");\n\nvar ReactEventEmitter = require(\"./ReactEventEmitter\");\n\nvar EventConstants = require(\"./EventConstants\"); // Store a reference to the <img> `ReactDOMComponent`.\n\n\nvar img = ReactDOM.img;\n/**\n * Since onLoad doesn't bubble OR capture on the top level in IE8, we need to\n * capture it on the <img> element itself. There are lots of hacks we could do\n * to accomplish this, but the most reliable is to make <img> a composite\n * component and use `componentDidMount` to attach the event handlers.\n */\n\nvar ReactDOMImg = ReactCompositeComponent.createClass({\n  displayName: 'ReactDOMImg',\n  tagName: 'IMG',\n  mixins: [ReactBrowserComponentMixin],\n  render: function () {\n    return img(this.props);\n  },\n  componentDidMount: function () {\n    var node = this.getDOMNode();\n    ReactEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node);\n    ReactEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node);\n  }\n});\nmodule.exports = ReactDOMImg;","map":{"version":3,"sources":["/home/dna-dev/Documents/react-web/node_modules/react-component/lib/ReactDOMImg.js"],"names":["ReactBrowserComponentMixin","require","ReactCompositeComponent","ReactDOM","ReactEventEmitter","EventConstants","img","ReactDOMImg","createClass","displayName","tagName","mixins","render","props","componentDidMount","node","getDOMNode","trapBubbledEvent","topLevelTypes","topLoad","topError","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,0BAA0B,GAAGC,OAAO,CAAC,8BAAD,CAAxC;;AACA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,2BAAD,CAArC;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,YAAD,CAAtB;;AACA,IAAIG,iBAAiB,GAAGH,OAAO,CAAC,qBAAD,CAA/B;;AACA,IAAII,cAAc,GAAGJ,OAAO,CAAC,kBAAD,CAA5B,C,CAEA;;;AACA,IAAIK,GAAG,GAAGH,QAAQ,CAACG,GAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,WAAW,GAAGL,uBAAuB,CAACM,WAAxB,CAAoC;AACpDC,EAAAA,WAAW,EAAE,aADuC;AAEpDC,EAAAA,OAAO,EAAE,KAF2C;AAIpDC,EAAAA,MAAM,EAAE,CAACX,0BAAD,CAJ4C;AAMpDY,EAAAA,MAAM,EAAE,YAAW;AACjB,WAAON,GAAG,CAAC,KAAKO,KAAN,CAAV;AACD,GARmD;AAUpDC,EAAAA,iBAAiB,EAAE,YAAW;AAC5B,QAAIC,IAAI,GAAG,KAAKC,UAAL,EAAX;AACAZ,IAAAA,iBAAiB,CAACa,gBAAlB,CACEZ,cAAc,CAACa,aAAf,CAA6BC,OAD/B,EAEE,MAFF,EAGEJ,IAHF;AAKAX,IAAAA,iBAAiB,CAACa,gBAAlB,CACEZ,cAAc,CAACa,aAAf,CAA6BE,QAD/B,EAEE,OAFF,EAGEL,IAHF;AAKD;AAtBmD,CAApC,CAAlB;AAyBAM,MAAM,CAACC,OAAP,GAAiBf,WAAjB","sourcesContent":["/**\n * Copyright 2013-2014 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule ReactDOMImg\n */\n\n\"use strict\";\n\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactCompositeComponent = require(\"./ReactCompositeComponent\");\nvar ReactDOM = require(\"./ReactDOM\");\nvar ReactEventEmitter = require(\"./ReactEventEmitter\");\nvar EventConstants = require(\"./EventConstants\");\n\n// Store a reference to the <img> `ReactDOMComponent`.\nvar img = ReactDOM.img;\n\n/**\n * Since onLoad doesn't bubble OR capture on the top level in IE8, we need to\n * capture it on the <img> element itself. There are lots of hacks we could do\n * to accomplish this, but the most reliable is to make <img> a composite\n * component and use `componentDidMount` to attach the event handlers.\n */\nvar ReactDOMImg = ReactCompositeComponent.createClass({\n  displayName: 'ReactDOMImg',\n  tagName: 'IMG',\n\n  mixins: [ReactBrowserComponentMixin],\n\n  render: function() {\n    return img(this.props);\n  },\n\n  componentDidMount: function() {\n    var node = this.getDOMNode();\n    ReactEventEmitter.trapBubbledEvent(\n      EventConstants.topLevelTypes.topLoad,\n      'load',\n      node\n    );\n    ReactEventEmitter.trapBubbledEvent(\n      EventConstants.topLevelTypes.topError,\n      'error',\n      node\n    );\n  }\n});\n\nmodule.exports = ReactDOMImg;\n"]},"metadata":{},"sourceType":"script"}