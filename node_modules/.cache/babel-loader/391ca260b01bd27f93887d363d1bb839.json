{"ast":null,"code":"/**\n * Copyright 2013-2014 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule ReactDOMForm\n */\n\"use strict\";\n\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\n\nvar ReactCompositeComponent = require(\"./ReactCompositeComponent\");\n\nvar ReactDOM = require(\"./ReactDOM\");\n\nvar ReactEventEmitter = require(\"./ReactEventEmitter\");\n\nvar EventConstants = require(\"./EventConstants\"); // Store a reference to the <form> `ReactDOMComponent`.\n\n\nvar form = ReactDOM.form;\n/**\n * Since onSubmit doesn't bubble OR capture on the top level in IE8, we need\n * to capture it on the <form> element itself. There are lots of hacks we could\n * do to accomplish this, but the most reliable is to make <form> a\n * composite component and use `componentDidMount` to attach the event handlers.\n */\n\nvar ReactDOMForm = ReactCompositeComponent.createClass({\n  displayName: 'ReactDOMForm',\n  mixins: [ReactBrowserComponentMixin],\n  render: function () {\n    // TODO: Instead of using `ReactDOM` directly, we should use JSX. However,\n    // `jshint` fails to parse JSX so in order for linting to work in the open\n    // source repo, we need to just use `ReactDOM.form`.\n    return this.transferPropsTo(form(null, this.props.children));\n  },\n  componentDidMount: function () {\n    ReactEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', this.getDOMNode());\n    ReactEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', this.getDOMNode());\n  }\n});\nmodule.exports = ReactDOMForm;","map":{"version":3,"sources":["/home/dna-dev/Documents/react-web/node_modules/react-component/lib/ReactDOMForm.js"],"names":["ReactBrowserComponentMixin","require","ReactCompositeComponent","ReactDOM","ReactEventEmitter","EventConstants","form","ReactDOMForm","createClass","displayName","mixins","render","transferPropsTo","props","children","componentDidMount","trapBubbledEvent","topLevelTypes","topReset","getDOMNode","topSubmit","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,0BAA0B,GAAGC,OAAO,CAAC,8BAAD,CAAxC;;AACA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,2BAAD,CAArC;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,YAAD,CAAtB;;AACA,IAAIG,iBAAiB,GAAGH,OAAO,CAAC,qBAAD,CAA/B;;AACA,IAAII,cAAc,GAAGJ,OAAO,CAAC,kBAAD,CAA5B,C,CAEA;;;AACA,IAAIK,IAAI,GAAGH,QAAQ,CAACG,IAApB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,YAAY,GAAGL,uBAAuB,CAACM,WAAxB,CAAoC;AACrDC,EAAAA,WAAW,EAAE,cADwC;AAGrDC,EAAAA,MAAM,EAAE,CAACV,0BAAD,CAH6C;AAKrDW,EAAAA,MAAM,EAAE,YAAW;AACjB;AACA;AACA;AACA,WAAO,KAAKC,eAAL,CAAqBN,IAAI,CAAC,IAAD,EAAO,KAAKO,KAAL,CAAWC,QAAlB,CAAzB,CAAP;AACD,GAVoD;AAYrDC,EAAAA,iBAAiB,EAAE,YAAW;AAC5BX,IAAAA,iBAAiB,CAACY,gBAAlB,CACEX,cAAc,CAACY,aAAf,CAA6BC,QAD/B,EAEE,OAFF,EAGE,KAAKC,UAAL,EAHF;AAKAf,IAAAA,iBAAiB,CAACY,gBAAlB,CACEX,cAAc,CAACY,aAAf,CAA6BG,SAD/B,EAEE,QAFF,EAGE,KAAKD,UAAL,EAHF;AAKD;AAvBoD,CAApC,CAAnB;AA0BAE,MAAM,CAACC,OAAP,GAAiBf,YAAjB","sourcesContent":["/**\n * Copyright 2013-2014 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule ReactDOMForm\n */\n\n\"use strict\";\n\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactCompositeComponent = require(\"./ReactCompositeComponent\");\nvar ReactDOM = require(\"./ReactDOM\");\nvar ReactEventEmitter = require(\"./ReactEventEmitter\");\nvar EventConstants = require(\"./EventConstants\");\n\n// Store a reference to the <form> `ReactDOMComponent`.\nvar form = ReactDOM.form;\n\n/**\n * Since onSubmit doesn't bubble OR capture on the top level in IE8, we need\n * to capture it on the <form> element itself. There are lots of hacks we could\n * do to accomplish this, but the most reliable is to make <form> a\n * composite component and use `componentDidMount` to attach the event handlers.\n */\nvar ReactDOMForm = ReactCompositeComponent.createClass({\n  displayName: 'ReactDOMForm',\n\n  mixins: [ReactBrowserComponentMixin],\n\n  render: function() {\n    // TODO: Instead of using `ReactDOM` directly, we should use JSX. However,\n    // `jshint` fails to parse JSX so in order for linting to work in the open\n    // source repo, we need to just use `ReactDOM.form`.\n    return this.transferPropsTo(form(null, this.props.children));\n  },\n\n  componentDidMount: function() {\n    ReactEventEmitter.trapBubbledEvent(\n      EventConstants.topLevelTypes.topReset,\n      'reset',\n      this.getDOMNode()\n    );\n    ReactEventEmitter.trapBubbledEvent(\n      EventConstants.topLevelTypes.topSubmit,\n      'submit',\n      this.getDOMNode()\n    );\n  }\n});\n\nmodule.exports = ReactDOMForm;\n"]},"metadata":{},"sourceType":"script"}