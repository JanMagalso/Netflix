{"ast":null,"code":"/**\n * Copyright 2014 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule ReactServerRenderingTransaction\n * @typechecks\n */\n\"use strict\";\n\nvar PooledClass = require(\"./PooledClass\");\n\nvar ReactMountReady = require(\"./ReactMountReady\");\n\nvar ReactPutListenerQueue = require(\"./ReactPutListenerQueue\");\n\nvar Transaction = require(\"./Transaction\");\n\nvar emptyFunction = require(\"./emptyFunction\");\n\nvar mixInto = require(\"./mixInto\");\n/**\n * Provides a `ReactMountReady` queue for collecting `onDOMReady` callbacks\n * during the performing of the transaction.\n */\n\n\nvar ON_DOM_READY_QUEUEING = {\n  /**\n   * Initializes the internal `onDOMReady` queue.\n   */\n  initialize: function () {\n    this.reactMountReady.reset();\n  },\n  close: emptyFunction\n};\nvar PUT_LISTENER_QUEUEING = {\n  initialize: function () {\n    this.putListenerQueue.reset();\n  },\n  close: emptyFunction\n};\n/**\n * Executed within the scope of the `Transaction` instance. Consider these as\n * being member methods, but with an implied ordering while being isolated from\n * each other.\n */\n\nvar TRANSACTION_WRAPPERS = [PUT_LISTENER_QUEUEING, ON_DOM_READY_QUEUEING];\n/**\n * @class ReactServerRenderingTransaction\n * @param {boolean} renderToStaticMarkup\n */\n\nfunction ReactServerRenderingTransaction(renderToStaticMarkup) {\n  this.reinitializeTransaction();\n  this.renderToStaticMarkup = renderToStaticMarkup;\n  this.reactMountReady = ReactMountReady.getPooled(null);\n  this.putListenerQueue = ReactPutListenerQueue.getPooled();\n}\n\nvar Mixin = {\n  /**\n   * @see Transaction\n   * @abstract\n   * @final\n   * @return {array} Empty list of operation wrap proceedures.\n   */\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  /**\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\n   *   TODO: convert to ReactMountReady\n   */\n  getReactMountReady: function () {\n    return this.reactMountReady;\n  },\n  getPutListenerQueue: function () {\n    return this.putListenerQueue;\n  },\n\n  /**\n   * `PooledClass` looks for this, and will invoke this before allowing this\n   * instance to be resused.\n   */\n  destructor: function () {\n    ReactMountReady.release(this.reactMountReady);\n    this.reactMountReady = null;\n    ReactPutListenerQueue.release(this.putListenerQueue);\n    this.putListenerQueue = null;\n  }\n};\nmixInto(ReactServerRenderingTransaction, Transaction.Mixin);\nmixInto(ReactServerRenderingTransaction, Mixin);\nPooledClass.addPoolingTo(ReactServerRenderingTransaction);\nmodule.exports = ReactServerRenderingTransaction;","map":{"version":3,"sources":["/home/dna-dev/Documents/react-web/node_modules/react-component/lib/ReactServerRenderingTransaction.js"],"names":["PooledClass","require","ReactMountReady","ReactPutListenerQueue","Transaction","emptyFunction","mixInto","ON_DOM_READY_QUEUEING","initialize","reactMountReady","reset","close","PUT_LISTENER_QUEUEING","putListenerQueue","TRANSACTION_WRAPPERS","ReactServerRenderingTransaction","renderToStaticMarkup","reinitializeTransaction","getPooled","Mixin","getTransactionWrappers","getReactMountReady","getPutListenerQueue","destructor","release","addPoolingTo","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,WAAW,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AACA,IAAIC,eAAe,GAAGD,OAAO,CAAC,mBAAD,CAA7B;;AACA,IAAIE,qBAAqB,GAAGF,OAAO,CAAC,yBAAD,CAAnC;;AACA,IAAIG,WAAW,GAAGH,OAAO,CAAC,eAAD,CAAzB;;AAEA,IAAII,aAAa,GAAGJ,OAAO,CAAC,iBAAD,CAA3B;;AACA,IAAIK,OAAO,GAAGL,OAAO,CAAC,WAAD,CAArB;AAEA;AACA;AACA;AACA;;;AACA,IAAIM,qBAAqB,GAAG;AAC1B;AACF;AACA;AACEC,EAAAA,UAAU,EAAE,YAAW;AACrB,SAAKC,eAAL,CAAqBC,KAArB;AACD,GANyB;AAQ1BC,EAAAA,KAAK,EAAEN;AARmB,CAA5B;AAWA,IAAIO,qBAAqB,GAAG;AAC1BJ,EAAAA,UAAU,EAAE,YAAW;AACrB,SAAKK,gBAAL,CAAsBH,KAAtB;AACD,GAHyB;AAK1BC,EAAAA,KAAK,EAAEN;AALmB,CAA5B;AAQA;AACA;AACA;AACA;AACA;;AACA,IAAIS,oBAAoB,GAAG,CACzBF,qBADyB,EAEzBL,qBAFyB,CAA3B;AAKA;AACA;AACA;AACA;;AACA,SAASQ,+BAAT,CAAyCC,oBAAzC,EAA+D;AAC7D,OAAKC,uBAAL;AACA,OAAKD,oBAAL,GAA4BA,oBAA5B;AACA,OAAKP,eAAL,GAAuBP,eAAe,CAACgB,SAAhB,CAA0B,IAA1B,CAAvB;AACA,OAAKL,gBAAL,GAAwBV,qBAAqB,CAACe,SAAtB,EAAxB;AACD;;AAED,IAAIC,KAAK,GAAG;AACV;AACF;AACA;AACA;AACA;AACA;AACEC,EAAAA,sBAAsB,EAAE,YAAW;AACjC,WAAON,oBAAP;AACD,GATS;;AAWV;AACF;AACA;AACA;AACEO,EAAAA,kBAAkB,EAAE,YAAW;AAC7B,WAAO,KAAKZ,eAAZ;AACD,GAjBS;AAmBVa,EAAAA,mBAAmB,EAAE,YAAW;AAC9B,WAAO,KAAKT,gBAAZ;AACD,GArBS;;AAuBV;AACF;AACA;AACA;AACEU,EAAAA,UAAU,EAAE,YAAW;AACrBrB,IAAAA,eAAe,CAACsB,OAAhB,CAAwB,KAAKf,eAA7B;AACA,SAAKA,eAAL,GAAuB,IAAvB;AAEAN,IAAAA,qBAAqB,CAACqB,OAAtB,CAA8B,KAAKX,gBAAnC;AACA,SAAKA,gBAAL,GAAwB,IAAxB;AACD;AAjCS,CAAZ;AAqCAP,OAAO,CAACS,+BAAD,EAAkCX,WAAW,CAACe,KAA9C,CAAP;AACAb,OAAO,CAACS,+BAAD,EAAkCI,KAAlC,CAAP;AAEAnB,WAAW,CAACyB,YAAZ,CAAyBV,+BAAzB;AAEAW,MAAM,CAACC,OAAP,GAAiBZ,+BAAjB","sourcesContent":["/**\n * Copyright 2014 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule ReactServerRenderingTransaction\n * @typechecks\n */\n\n\"use strict\";\n\nvar PooledClass = require(\"./PooledClass\");\nvar ReactMountReady = require(\"./ReactMountReady\");\nvar ReactPutListenerQueue = require(\"./ReactPutListenerQueue\");\nvar Transaction = require(\"./Transaction\");\n\nvar emptyFunction = require(\"./emptyFunction\");\nvar mixInto = require(\"./mixInto\");\n\n/**\n * Provides a `ReactMountReady` queue for collecting `onDOMReady` callbacks\n * during the performing of the transaction.\n */\nvar ON_DOM_READY_QUEUEING = {\n  /**\n   * Initializes the internal `onDOMReady` queue.\n   */\n  initialize: function() {\n    this.reactMountReady.reset();\n  },\n\n  close: emptyFunction\n};\n\nvar PUT_LISTENER_QUEUEING = {\n  initialize: function() {\n    this.putListenerQueue.reset();\n  },\n\n  close: emptyFunction\n};\n\n/**\n * Executed within the scope of the `Transaction` instance. Consider these as\n * being member methods, but with an implied ordering while being isolated from\n * each other.\n */\nvar TRANSACTION_WRAPPERS = [\n  PUT_LISTENER_QUEUEING,\n  ON_DOM_READY_QUEUEING\n];\n\n/**\n * @class ReactServerRenderingTransaction\n * @param {boolean} renderToStaticMarkup\n */\nfunction ReactServerRenderingTransaction(renderToStaticMarkup) {\n  this.reinitializeTransaction();\n  this.renderToStaticMarkup = renderToStaticMarkup;\n  this.reactMountReady = ReactMountReady.getPooled(null);\n  this.putListenerQueue = ReactPutListenerQueue.getPooled();\n}\n\nvar Mixin = {\n  /**\n   * @see Transaction\n   * @abstract\n   * @final\n   * @return {array} Empty list of operation wrap proceedures.\n   */\n  getTransactionWrappers: function() {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  /**\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\n   *   TODO: convert to ReactMountReady\n   */\n  getReactMountReady: function() {\n    return this.reactMountReady;\n  },\n\n  getPutListenerQueue: function() {\n    return this.putListenerQueue;\n  },\n\n  /**\n   * `PooledClass` looks for this, and will invoke this before allowing this\n   * instance to be resused.\n   */\n  destructor: function() {\n    ReactMountReady.release(this.reactMountReady);\n    this.reactMountReady = null;\n\n    ReactPutListenerQueue.release(this.putListenerQueue);\n    this.putListenerQueue = null;\n  }\n};\n\n\nmixInto(ReactServerRenderingTransaction, Transaction.Mixin);\nmixInto(ReactServerRenderingTransaction, Mixin);\n\nPooledClass.addPoolingTo(ReactServerRenderingTransaction);\n\nmodule.exports = ReactServerRenderingTransaction;\n"]},"metadata":{},"sourceType":"script"}