{"ast":null,"code":"var _jsxFileName = \"/home/dna-dev/Documents/react-web/Netflix/netflix-2/src/components/pages/Movies.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Latest } from './../Movies';\nimport Styled from 'styled-components';\nimport { AppSearch } from '../context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Movies() {\n  _s();\n\n  const context = useContext(AppSearch);\n  const {\n    searchValue\n  } = context.states;\n  const [movies, setMovies] = useState(Latest);\n  useEffect(() => {\n    const newList = [...Latest].filter(data => data.title.toLowerCase().match(searchValue.toLowerCase()) !== null);\n    setMovies(newList);\n  }, [searchValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"py-20 px-14 bg-black h-screen overflow-x-auto \",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-5 text-white text-2xl mr-14\",\n      children: [\"My list\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 67\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex mx-auto scrollbar overflow-x-auto\",\n      children: movies.map((dataList, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mx-1 py-10 group\",\n          children: [/*#__PURE__*/_jsxDEV(StyledPlay, {\n            href: \"./\",\n            className: \"\",\n            children: [/*#__PURE__*/_jsxDEV(StyledImg, {\n              src: dataList.img,\n              className: \"\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"./../img/play.png\",\n              className: \"play absolute hidden\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-white z-50 relative top-0 mt-5 hidden\",\n            children: dataList.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Movies, \"l9TGVH3RFXPq597F6gM62rlDd84=\");\n\n_c = Movies;\nconst StyledImg = Styled.img`\n\n    margin-top: 20px;\n    max-width: unset;\n    width: 200px;\n    height: 120px;\n    :hover{\n        transition: 0.5s;\n        transform: scale(1.5);\n        object-fit: contain;\n\n    }\n    @media (max-width: 768px){\n        :hover{\n            // transform: none;\n            transition: 0.5s;\n            overflow: scroll;\n            object-fit: contain;\n            transform: scale(1.2)\n        }\n    }\n`;\n_c2 = StyledImg;\nconst StyledPlay = Styled.a`\n    :hover .play{\n        top: 30%;\n        left: 30%;\n    }\n`;\n_c3 = StyledPlay;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Movies\");\n$RefreshReg$(_c2, \"StyledImg\");\n$RefreshReg$(_c3, \"StyledPlay\");","map":{"version":3,"sources":["/home/dna-dev/Documents/react-web/Netflix/netflix-2/src/components/pages/Movies.jsx"],"names":["React","useContext","useEffect","useState","Latest","Styled","AppSearch","Movies","context","searchValue","states","movies","setMovies","newList","filter","data","title","toLowerCase","match","map","dataList","i","img","StyledImg","StyledPlay","a"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAAQC,MAAR,QAAqB,aAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,QAA0B,YAA1B;;AAEA,eAAe,SAASC,MAAT,GAAiB;AAAA;;AAC5B,QAAMC,OAAO,GAAGP,UAAU,CAACK,SAAD,CAA1B;AACA,QAAM;AAACG,IAAAA;AAAD,MAAgBD,OAAO,CAACE,MAA9B;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAACC,MAAD,CAApC;AACAF,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMW,OAAO,GAAG,CAAC,GAAGT,MAAJ,EAAYU,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACC,KAAL,CAAWC,WAAX,GAAyBC,KAAzB,CAA+BT,WAAW,CAACQ,WAAZ,EAA/B,MAA6D,IAAxF,CAAhB;AACAL,IAAAA,SAAS,CAACC,OAAD,CAAT;AACH,GAHQ,EAGP,CAACJ,WAAD,CAHO,CAAT;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,gDAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,gCAAd;AAAA,yCAAsD;AAAA;AAAA;AAAA;AAAA,cAAtD;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGK;AAAK,MAAA,SAAS,EAAC,wCAAf;AAAA,gBAEGE,MAAM,CAACQ,GAAP,CAAW,CAACC,QAAD,EAAUC,CAAV,KAAgB;AAC3B,4BACI;AAAK,UAAA,SAAS,EAAC,8BAAf;AAAA,kCACI,QAAC,UAAD;AAAY,YAAA,IAAI,EAAC,IAAjB;AAAsB,YAAA,SAAS,EAAC,EAAhC;AAAA,oCACI,QAAC,SAAD;AACQ,cAAA,GAAG,EAAED,QAAQ,CAACE,GADtB;AAEQ,cAAA,SAAS,EAAC,EAFlB;AAGQ,cAAA,GAAG,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAMQ;AAAK,cAAA,GAAG,EAAC,mBAAT;AAA6B,cAAA,SAAS,EAAC,sBAAvC;AAA8D,cAAA,GAAG,EAAC;AAAlE;AAAA;AAAA;AAAA;AAAA,oBANR;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eASQ;AAAI,YAAA,SAAS,EAAC,4CAAd;AAAA,sBAA4DF,QAAQ,CAACJ;AAArE;AAAA;AAAA;AAAA;AAAA,kBATR;AAAA,WAAmDK,CAAnD;AAAA;AAAA;AAAA;AAAA,gBADJ;AAaH,OAdG;AAFH;AAAA;AAAA;AAAA;AAAA,YAHL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH;;GAjCuBd,M;;KAAAA,M;AAmCxB,MAAMgB,SAAS,GAAGlB,MAAM,CAACiB,GAAK;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArBA;MAAMC,S;AAsBN,MAAMC,UAAU,GAAGnB,MAAM,CAACoB,CAAG;AAC7B;AACA;AACA;AACA;AACA,CALA;MAAMD,U","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport {Latest} from './../Movies'\nimport Styled from 'styled-components'\nimport { AppSearch } from '../context';\n\nexport default function Movies(){\n    const context = useContext(AppSearch)\n    const {searchValue} = context.states;\n    const [movies, setMovies] = useState(Latest); \n    useEffect(()=>{\n        const newList = [...Latest].filter(data => data.title.toLowerCase().match(searchValue.toLowerCase())!== null)\n        setMovies(newList);\n    },[searchValue])\n    return(\n        <div className='py-20 px-14 bg-black h-screen overflow-x-auto '>\n            <h2 className='mb-5 text-white text-2xl mr-14'>My list<br/>\n            </h2>\n             <div className='flex mx-auto scrollbar overflow-x-auto'>\n            {\n                movies.map((dataList,i) => {\n                return(\n                    <div className='text-center mx-1 py-10 group' key={i}>\n                        <StyledPlay href='./' className='' >\n                            <StyledImg \n                                    src={dataList.img}\n                                    className=''\n                                    alt=''\n                                />\n                                <img src='./../img/play.png' className=\"play absolute hidden\" alt=''/>\n                            </StyledPlay>\n                            <h2 className='text-white z-50 relative top-0 mt-5 hidden'>{dataList.title}</h2>\n                    </div>\n                )\n            })\n            }\n            </div>\n        </div>\n    )\n}\n\nconst StyledImg = Styled.img `\n\n    margin-top: 20px;\n    max-width: unset;\n    width: 200px;\n    height: 120px;\n    :hover{\n        transition: 0.5s;\n        transform: scale(1.5);\n        object-fit: contain;\n\n    }\n    @media (max-width: 768px){\n        :hover{\n            // transform: none;\n            transition: 0.5s;\n            overflow: scroll;\n            object-fit: contain;\n            transform: scale(1.2)\n        }\n    }\n`\nconst StyledPlay = Styled.a `\n    :hover .play{\n        top: 30%;\n        left: 30%;\n    }\n`\n"]},"metadata":{},"sourceType":"module"}