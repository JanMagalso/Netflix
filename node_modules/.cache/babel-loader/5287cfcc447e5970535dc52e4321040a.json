{"ast":null,"code":"/**\n * Copyright 2013-2014 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule SyntheticKeyboardEvent\n * @typechecks static-only\n */\n\"use strict\";\n\nvar SyntheticUIEvent = require(\"./SyntheticUIEvent\");\n\nvar getEventKey = require(\"./getEventKey\");\n/**\n * @interface KeyboardEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\n\n\nvar KeyboardEventInterface = {\n  key: getEventKey,\n  location: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  repeat: null,\n  locale: null,\n  // Legacy Interface\n  'char': null,\n  charCode: null,\n  keyCode: null,\n  which: null\n};\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\n\nfunction SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);\nmodule.exports = SyntheticKeyboardEvent;","map":{"version":3,"sources":["/home/dna-dev/Documents/react-web/node_modules/react-component/lib/SyntheticKeyboardEvent.js"],"names":["SyntheticUIEvent","require","getEventKey","KeyboardEventInterface","key","location","ctrlKey","shiftKey","altKey","metaKey","repeat","locale","charCode","keyCode","which","SyntheticKeyboardEvent","dispatchConfig","dispatchMarker","nativeEvent","call","augmentClass","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,gBAAgB,GAAGC,OAAO,CAAC,oBAAD,CAA9B;;AAEA,IAAIC,WAAW,GAAGD,OAAO,CAAC,eAAD,CAAzB;AAEA;AACA;AACA;AACA;;;AACA,IAAIE,sBAAsB,GAAG;AAC3BC,EAAAA,GAAG,EAAEF,WADsB;AAE3BG,EAAAA,QAAQ,EAAE,IAFiB;AAG3BC,EAAAA,OAAO,EAAE,IAHkB;AAI3BC,EAAAA,QAAQ,EAAE,IAJiB;AAK3BC,EAAAA,MAAM,EAAE,IALmB;AAM3BC,EAAAA,OAAO,EAAE,IANkB;AAO3BC,EAAAA,MAAM,EAAE,IAPmB;AAQ3BC,EAAAA,MAAM,EAAE,IARmB;AAS3B;AACA,UAAQ,IAVmB;AAW3BC,EAAAA,QAAQ,EAAE,IAXiB;AAY3BC,EAAAA,OAAO,EAAE,IAZkB;AAa3BC,EAAAA,KAAK,EAAE;AAboB,CAA7B;AAgBA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,sBAAT,CAAgCC,cAAhC,EAAgDC,cAAhD,EAAgEC,WAAhE,EAA6E;AAC3ElB,EAAAA,gBAAgB,CAACmB,IAAjB,CAAsB,IAAtB,EAA4BH,cAA5B,EAA4CC,cAA5C,EAA4DC,WAA5D;AACD;;AAEDlB,gBAAgB,CAACoB,YAAjB,CAA8BL,sBAA9B,EAAsDZ,sBAAtD;AAEAkB,MAAM,CAACC,OAAP,GAAiBP,sBAAjB","sourcesContent":["/**\n * Copyright 2013-2014 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule SyntheticKeyboardEvent\n * @typechecks static-only\n */\n\n\"use strict\";\n\nvar SyntheticUIEvent = require(\"./SyntheticUIEvent\");\n\nvar getEventKey = require(\"./getEventKey\");\n\n/**\n * @interface KeyboardEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar KeyboardEventInterface = {\n  key: getEventKey,\n  location: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  repeat: null,\n  locale: null,\n  // Legacy Interface\n  'char': null,\n  charCode: null,\n  keyCode: null,\n  which: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);\n\nmodule.exports = SyntheticKeyboardEvent;\n"]},"metadata":{},"sourceType":"script"}