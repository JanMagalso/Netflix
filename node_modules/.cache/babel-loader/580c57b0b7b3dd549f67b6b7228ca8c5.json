{"ast":null,"code":"var _jsxFileName = \"/home/dna-dev/Documents/react-web/Netflix/netflix-2/src/components/pages/Movies.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Latest } from './../Movies';\nimport Styled from 'styled-components';\nimport { AppSearch } from '../context';\nimport { useNavigate } from \"react-router\";\nimport Slider from 'react-slick';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Movies() {\n  _s();\n\n  const context = useContext(AppSearch);\n  const {\n    searchValue\n  } = context.states;\n  const [movies, setMovies] = useState(Latest);\n  const {\n    check,\n    setCheck\n  } = useState(false);\n  const navigate = useNavigate();\n  const settings = {\n    dots: false,\n    infinite: check,\n    slidesToShow: 5,\n    slidesToScroll: 1,\n    autoplay: true,\n    speed: 500,\n    autoplaySpeed: 5000,\n    cssEase: \"linear\"\n  };\n  useEffect(() => {\n    // infiniteCheck();\n    searchValue !== null ? setCheck(true) : setCheck(false);\n    const newList = [...Latest].filter(data => data.title.toLowerCase().match(searchValue.toLowerCase()) !== null);\n    setMovies(newList);\n    console.log(searchValue);\n  }, [searchValue, setCheck]); // const infiniteCheck = () => {\n  //     if(searchValue!==null||searchValue!==''){\n  //         settings.infinite = false;\n  //     }\n  //     else{\n  //         settings.infinite = true;\n  //     }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(StyleDiv, {\n    className: \"py-20 px-14 bg-black h-screen overflow-x-auto \",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-5 text-white text-2xl\",\n      children: [\"My list\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 61\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(Slider, { ...settings,\n        children: movies.map((dataList, i) => {\n          console.log(movies);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              navigate(`/view/${dataList.id}`);\n            },\n            className: \"py-16\",\n            children: [/*#__PURE__*/_jsxDEV(StyledImg, {\n              src: dataList.img,\n              className: \"w-full h-full\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/\",\n              onClick: () => {\n                navigate(`/view/${dataList.id}`);\n              },\n              className: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-white z-50 relative top-0 mt-5 hidden\",\n              children: dataList.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Movies, \"/e7xpxtv2QxM3uzaPSly8R9it7M=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Movies;\nconst StyledImg = Styled.img`\n    margin-top: 20px;\n    max-width: unset;\n    width: 350px;\n    height: 180px;\n    :hover{\n        transition: 0.5s;\n        transform: scale(1.5);\n        object-fit: contain;\n\n    }\n    @media (max-width: 768px){\n        :hover{\n            // transform: none;\n            transition: 0.5s;\n            overflow: scroll;\n            object-fit: contain;\n            transform: scale(1.2)\n        }\n    }\n`;\n_c2 = StyledImg;\nconst StyleDiv = Styled.div`\n    .thumbnail .play:hover{\n        transition: 0.5s;\n        transform: scale(1.5);\n        object-fit: contain;\n    }\n    @media (max-width: 768px){\n        .thumbnail .play:hover{\n            // transform: none;\n            transition: 0.5s;\n            transform: scale(1.2)\n        }\n    }\n`;\n_c3 = StyleDiv;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Movies\");\n$RefreshReg$(_c2, \"StyledImg\");\n$RefreshReg$(_c3, \"StyleDiv\");","map":{"version":3,"sources":["/home/dna-dev/Documents/react-web/Netflix/netflix-2/src/components/pages/Movies.jsx"],"names":["React","useContext","useEffect","useState","Latest","Styled","AppSearch","useNavigate","Slider","Movies","context","searchValue","states","movies","setMovies","check","setCheck","navigate","settings","dots","infinite","slidesToShow","slidesToScroll","autoplay","speed","autoplaySpeed","cssEase","newList","filter","data","title","toLowerCase","match","console","log","map","dataList","i","id","img","StyledImg","StyleDiv","div"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport {Latest} from './../Movies'\nimport Styled from 'styled-components'\nimport { AppSearch } from '../context';\nimport { useNavigate } from \"react-router\";\nimport Slider from 'react-slick'\n\nexport default function Movies(){\n    const context = useContext(AppSearch)\n    const {searchValue} = context.states;\n    const [movies, setMovies] = useState(Latest); \n    const {check, setCheck} = useState(false);\n    const navigate = useNavigate()\n    const settings = {\n            dots: false,\n            infinite: check,\n            slidesToShow: 5,\n            slidesToScroll: 1,\n            autoplay: true,\n            speed: 500,\n            autoplaySpeed: 5000,\n            cssEase: \"linear\",\n      };\n    useEffect(()=>{\n        // infiniteCheck();\n        searchValue!==null?\n            setCheck(true):\n            setCheck(false)\n        const newList = [...Latest].filter(data => data.title.toLowerCase().match(searchValue.toLowerCase())!== null)\n        setMovies(newList);\n        console.log(searchValue);\n    },[searchValue, setCheck])\n    // const infiniteCheck = () => {\n    //     if(searchValue!==null||searchValue!==''){\n    //         settings.infinite = false;\n    //     }\n    //     else{\n    //         settings.infinite = true;\n    //     }\n    // }\n    return(\n        <StyleDiv className='py-20 px-14 bg-black h-screen overflow-x-auto '>\n            <h2 className='mb-5 text-white text-2xl'>My list<br/>\n            </h2>\n             <div className=''>\n                <Slider {...settings}>\n                {\n                    movies.map((dataList,i) => {\n                    console.log(movies);\n                    return(\n                        <div onClick={() => {\n                            navigate(`/view/${dataList.id}`);\n                        }} \n                        className='py-16' key={i}>\n                            <StyledImg\n                                    src={dataList.img}\n                                    className='w-full h-full'\n                                    alt=''\n                                />\n                            <a href=\"/\" onClick={() => {\n                                navigate(`/view/${dataList.id}`);\n                            }}\n                                className='' >\n                                    {/* <img src='./../img/play.png' alt=''/> */}\n                            </a>\n                                <h2 className='text-white z-50 relative top-0 mt-5 hidden'>{dataList.title}</h2>\n                        </div>\n                    )\n                })\n                }\n                </Slider>\n            </div>\n        </StyleDiv>\n    )\n}\n\nconst StyledImg = Styled.img `\n    margin-top: 20px;\n    max-width: unset;\n    width: 350px;\n    height: 180px;\n    :hover{\n        transition: 0.5s;\n        transform: scale(1.5);\n        object-fit: contain;\n\n    }\n    @media (max-width: 768px){\n        :hover{\n            // transform: none;\n            transition: 0.5s;\n            overflow: scroll;\n            object-fit: contain;\n            transform: scale(1.2)\n        }\n    }\n`\n\nconst StyleDiv = Styled.div`\n    .thumbnail .play:hover{\n        transition: 0.5s;\n        transform: scale(1.5);\n        object-fit: contain;\n    }\n    @media (max-width: 768px){\n        .thumbnail .play:hover{\n            // transform: none;\n            transition: 0.5s;\n            transform: scale(1.2)\n        }\n    }\n`\n"]},"metadata":{},"sourceType":"module"}