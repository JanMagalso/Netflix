{"ast":null,"code":"var _jsxFileName = \"/home/dna-dev/Documents/react-web/src/components/context/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppSearch = /*#__PURE__*/React.createContext({});\nexport const ContextProvider = props => {\n  _s();\n\n  const initialValue = {\n    searchValue: '',\n    isLoading: false\n  };\n  let user = {\n    name: 'JohnMagalso',\n    password: 'admin',\n    auth: false\n  };\n  const [userLogin, setUserLogin] = useState(user);\n  const [states, setStates] = useState(initialValue);\n  return /*#__PURE__*/_jsxDEV(AppSearch.Provider, {\n    value: {\n      states: states,\n      setStates: setStates,\n      userLogin: userLogin,\n      setUserLogin: setUserLogin\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}; // export const Authentication = (props) => {\n//     \n//     return(\n//         <AppLogin.Provider value={{userLogin: userLogin, setUserLogin:setUserLogin}}>\n//             {props.children}\n//         </AppLogin.Provider>\n//     )\n// }\n\n_s(ContextProvider, \"/uyHo0VqJ3lZYmZKvTSE9xN7VXQ=\");\n\n_c = ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["/home/dna-dev/Documents/react-web/src/components/context/index.js"],"names":["React","useState","AppSearch","createContext","ContextProvider","props","initialValue","searchValue","isLoading","user","name","password","auth","userLogin","setUserLogin","states","setStates","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;;AAEA,OAAO,MAAMC,SAAS,gBAAGF,KAAK,CAACG,aAAN,CAAoB,EAApB,CAAlB;AACP,OAAO,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AACtC,QAAMC,YAAY,GAAG;AACjBC,IAAAA,WAAW,EAAE,EADI;AAEjBC,IAAAA,SAAS,EAAE;AAFM,GAArB;AAIA,MAAIC,IAAI,GAAG;AACCC,IAAAA,IAAI,EAAE,aADP;AAECC,IAAAA,QAAQ,EAAE,OAFX;AAGCC,IAAAA,IAAI,EAAE;AAHP,GAAX;AAKA,QAAM,CAACC,SAAD,EAAWC,YAAX,IAA2Bb,QAAQ,CAACQ,IAAD,CAAzC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAACK,YAAD,CAApC;AACA,sBACI,QAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,KAAK,EAAE;AAACS,MAAAA,MAAM,EAAEA,MAAT;AAAiBC,MAAAA,SAAS,EAAEA,SAA5B;AAAsCH,MAAAA,SAAS,EAAEA,SAAjD;AAA4DC,MAAAA,YAAY,EAAEA;AAA1E,KAA3B;AAAA,cACKT,KAAK,CAACY;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAjBM,C,CAkBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GAzBab,e;;KAAAA,e","sourcesContent":["import React, { useState} from \"react\";\n\nexport const AppSearch = React.createContext({});\nexport const ContextProvider = (props) => {\n    const initialValue = { \n        searchValue: '',\n        isLoading: false,\n    }\n    let user = {\n                name: 'JohnMagalso',\n                password: 'admin',\n                auth: false\n            }\n    const [userLogin,setUserLogin] = useState(user)\n    const [states, setStates] = useState(initialValue)\n    return(\n        <AppSearch.Provider value={{states: states, setStates: setStates,userLogin: userLogin, setUserLogin: setUserLogin}}>\n            {props.children}\n        </AppSearch.Provider>\n    )\n}\n// export const Authentication = (props) => {\n//     \n//     return(\n//         <AppLogin.Provider value={{userLogin: userLogin, setUserLogin:setUserLogin}}>\n//             {props.children}\n//         </AppLogin.Provider>\n//     )\n// }"]},"metadata":{},"sourceType":"module"}